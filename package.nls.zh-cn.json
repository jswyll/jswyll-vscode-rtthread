{
  "jswyll-vscode-rtthread.makeBaseDirectory.markdownDescription": "make的工作根目录。应为绝对路径，否则无法定位出错的文件。",
  "jswyll-vscode-rtthread.generate.title": "生成",
  "jswyll-vscode-rtthread.studioInstallPath.markdownDescription": "RT-Thread Studio的安装文件夹。选择或手动输入路径，路径中可以包含环境变量，例如 `${env:RTTHREAD_STUDIO_HOME}` 。",
  "jswyll-vscode-rtthread.makeToolPath.markdownDescription": "make工具的所在文件夹。选择或手动输入路径，路径中可以包含环境变量，例如 `${env:MAKE_HOME}` 。",
  "jswyll-vscode-rtthread.compilerPath.markdownDescription": "GCC编译器的所在路径，例如`D:/RT-ThreadStudio/repo/Extract/ToolChain_Support_Packages/ARM/GNU_Tools_for_ARM_Embedded_Processors/5.4.1/bin/arm-none-eabi-gcc` 。",
  "jswyll-vscode-rtthread.toolchainPath.markdownDescription": "GCC编译器的所在文件夹，例如`D:/RT-ThreadStudio/repo/Extract/ToolChain_Support_Packages/ARM/GNU_Tools_for_ARM_Embedded_Processors/5.4.1/bin` 。",
  "jswyll-vscode-rtthread.debuggerAdapter.markdownDescription": "选择的调试器类型。",
  "jswyll-vscode-rtthread.debuggerInterface.markdownDescription": "调试器接口类型。",
  "jswyll-vscode-rtthread.chipName.markdownDescription": "下载或调试程序的芯片名称，对于STM32应为11字符的（例如 `STM32F407ZG` ）。",
  "jswyll-vscode-rtthread.buildConfigName.markdownDescription": "不同的配置可用于不同的环境或目标，例如 `Debug`、`Release` 。",
  "jswyll-vscode-rtthread.defaultBuildTask.markdownDescription": "按快捷键（`Ctrl+Shift+B`）时执行的默认构建任务。",
  "jswyll-vscode-rtthread.debuggerServerPath.markdownDescription": "调试器服务器的类型。",
  "jswyll-vscode-rtthread.cmsisPack.markdownDescription": "芯片对应的Cmsis包的文件路径。如果芯片名称不是[pyocd内置目标](https://pyocd.io/docs/builtin-targets.html)则应指定。",
  "jswyll-vscode-rtthread.makefileProcessor.title": "makefile处理",
  "jswyll-vscode-rtthread.makefileProcessor.watch.markdownDescription": "监听makefile文件的变化并处理。",
  "jswyll-vscode-rtthread.action.tasks.build": "运行默认的构建任务",
  "jswyll-vscode-rtthread.command.developmentTest": "开发测试命令",
  "jswyll-vscode-rtthread.command.diagnosticInterrupt":"jswyll-vscode-rtthread: 诊断中断函数",
  "jswyll-vscode-rtthread.autoDiagnosticInterrupt.title": "自动诊断中断",
  "jswyll-vscode-rtthread.autoDiagnosticInterrupt.enable.description": "如果启用，路径符合`#jswyll-vscode-rtthread.diagnosticInterrupt.globPattern#`的文件出现RT-Thread片段时将自动诊断中断函数是否已调用了 `rt_interrupt_enter()` 和 `rt_interrupt_leave()` 。",
  "jswyll-vscode-rtthread.autoDiagnosticInterrupt.globPattern.description": "自动诊断的文件相对路径的[Glob表达式](https://code.visualstudio.com/docs/editor/glob-patterns)。",
  "jswyll-vscode-rtthread.command.AddIncludePath": "jswyll-vscode-rtthread: 添加到头文件搜索路径",
  "jswyll-vscode-rtthread.customExtraPathVar.markdownDescription": "自定义额外追加到环境变量`PATH`的路径",
  "jswyll-vscode-rtthread.customExtraVars.markdownDescription": "自定义额外的环境变量键值对",
  "jswyll-vscode-rtthread.projectType.markdownDescription": "项目类型，默认为`RT-Thread Studio`。",
  "jswyll-vscode-rtthread.envPath.markdownDescription": "env工具的文件夹路径，默认为`${userHome}/.env`。",
  "jswyll-vscode-rtthread.rttDir.markdownDescription": "RT-Thread源码的根目录（RTT_DIR）。",
  "jswyll-vscode-rtthread.RttEnv.title": "RT-Thread Env",
  "jswyll-vscode-rtthread.RttEnv.autoUpdatePackages.markdownDescription": "是否在保存菜单配置成功后自动更新软件包。",
  "jswyll-vscode-rtthread.generate.artifactPath.markdownDescription": "Env构建方式的产物的相对路径或绝对路径，例如`build/rt-thread.elf`，用于下载或调试。",
  "jswyll-vscode-rtthread.appearance.title": "外观",
  "jswyll-vscode-rtthread.appearance.showStatusBarTitle.markdownDescription": "是否显示状态栏标题。",
  "jswyll-vscode-rtthread.action.pickAWorkspaceFolder": "jswyll-vscode-rtthread: 选择一个工作区文件夹",
  "jswyll-vscode-rtthread.action.generateConfig": "jswyll-vscode-rtthread: 生成配置",
  "jswyll-vscode-rtthread.action.menuconfig.open": "jswyll-vscode-rtthread: 打开菜单配置",
  "jswyll-vscode-rtthread.action.terminal.open": "jswyll-vscode-rtthread: 打开终端",
  "jswyll-vscode-rtthread.action.ConEmu.open": "jswyll-vscode-rtthread: 在此处打开ConEmu",
  "jswyll-vscode-rtthread.clean": "jswyll-vscode-rtthread: 清除",
  "jswyll-vscode-rtthread.build": "jswyll-vscode-rtthread: 构建",
  "jswyll-vscode-rtthread.download": "jswyll-vscode-rtthread: 下载",
  "jswyll-vscode-rtthread.build and download": "jswyll-vscode-rtthread: 构建并下载",
  "jswyll-vscode-rtthread.action.changelog.open": "jswyll-vscode-rtthread: 查看扩展更新日志"
}