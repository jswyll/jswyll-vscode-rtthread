{
    "RT-Thread Kernel": "RT-Thread内核",
    "klibc options": "klibc选项",
    "rt_vsnprintf options": "rt_vsnprintf选项",
    "Enable rt_vsnprintf to use libc vsnprintf": "启用rt_vsnprintf使用libc vsnprintf",
    "Enable rt_vsnprintf function to support long-long format": "启用rt_vsnprintf函数，支持长-长格式",
    "Support for the long long integral types (with the ll, z and t length modifiers for specifiers\n%d,%i,%o,%x,%X,%u, and with the %p specifier). Note: 'L' (long double) is not supported.": "支持long long整型（带有指定符的ll、z和t长度修饰符）\n%d,%i,%o,%x,% x,% u，以及%p说明符)。注意：不支持‘L’（长双精度）。",
    "Enable standard rt_vsnprintf version": "启用rt_vsnprintf标准版本",
    "Standard version of rt_vsnprintf, which is full function but higher stack usage.": "rt_vsnprintf的标准版本，功能完整，但栈占用更高。",
    "rt_vsscanf options": "rt_vsscanf选项",
    "Enable rt_vsscanf to use libc vsscanf": "启用rt_vsscanf使用libc vsscanf",
    "rt_memset options": "rt_memset选项",
    "Enable rt_memset to use user-defined version": "允许rt_memset使用用户自定义版本",
    "Enable rt_memset to use libc memset": "允许rt_memset使用libc memset",
    "Enable rt_memset to use tiny version": "启用rt_memset使用tiny version",
    "rt_memcpy options": "rt_memcpy选项",
    "Enable rt_memcpy to use user-defined version": "启用rt_memcpy使用用户定义版本",
    "Enable rt_memcpy to use libc memcpy": "允许rt_memcpy使用libc memcpy",
    "Enable rt_memcpy to use tiny version": "允许rt_memcpy使用微小版本",
    "rt_memmove options": "rt_memmove选项",
    "Enable rt_memmove to use user-defined version": "启用rt_memmove使用用户自定义版本",
    "Enable rt_memmove to use libc memmove": "启用rt_memmove来使用libc memmove",
    "rt_memcmp options": "rt_memcmp选项",
    "Enable rt_memcmp to use user-defined version": "启用rt_memcmp使用用户自定义版本",
    "Enable rt_memcmp to use libc memcmp": "允许rt_memcmp使用libc memcmp",
    "rt_strstr options": "rt_strstr选项",
    "Enable rt_strstr to use user-defined version": "允许rt_strstr使用用户定义的版本",
    "Enable rt_strstr to use libc strstr": "允许rt_strstr使用libc strstr",
    "rt_strcasecmp options": "rt_strcasecmp选项",
    "Enable rt_strcasecmp to use user-defined version": "启用rt_strcasecmp使用用户自定义版本",
    "rt_strncpy options": "rt_strncpy选项",
    "Enable rt_strncpy to use user-defined version": "允许rt_strncpy使用用户定义的版本",
    "Enable rt_strncpy to use libc strncpy": "启用rt_strncpy来使用libc strncpy",
    "rt_strcpy options": "rt_strcpy选项",
    "Enable rt_strcpy to use user-defined version": "允许rt_strcpy使用用户定义的版本",
    "Enable rt_strcpy to use libc strcpy": "允许rt_strcpy使用libc strcpy",
    "rt_strncmp options": "rt_strncmp选项",
    "Enable rt_strncmp to use user-defined version": "启用rt_strncmp使用用户自定义版本",
    "Enable rt_strncmp to use libc strncmp": "启用rt_strncmp使用libc strncmp",
    "rt_strcmp options": "rt_strcmp选项",
    "Enable rt_strcmp to use user-defined version": "启用rt_strcmp使用用户自定义版本",
    "Enable rt_strcmp to use libc strcmp": "启用rt_strcmp使用libc strcmp",
    "rt_strlen options": "rt_strlen选项",
    "Enable rt_strlen to use user-defined version": "允许rt_strlen使用用户定义的版本",
    "Enable rt_strlen to use libc strlen": "允许rt_strlen使用libc strlen",
    "rt_strnlen options": "rt_strnlen选项",
    "Enable rt_strnlen to use user-defined version": "允许rt_strnlen使用用户定义的版本",
    "Enable klibc utest cases": "启用klibc测试用例",
    "The maximal size of kernel object name": "内核对象名称的最大大小",
    "Each kernel object, such as thread, timer, semaphore etc, has a name,\nthe RT_NAME_MAX is the maximal size of this object name.": "每个内核对象，如线程、定时器、信号量等，都有一个名称。\nRT_NAME_MAX是该对象名称的最大大小。",
    "Use the data types defined in ARCH_CPU": "使用在ARCH_CPU中定义的数据类型",
    "For the data type like, `rt_uint8/int8_t, rt_uint16/int16_t, rt_uint32/int32_t`,\nBSP can define these basic data types in ARCH_CPU level.\n\nPlease re-define these data types in rtconfig_project.h file.": "对于像rt_uint8/int8_t， rt_uint16/int16_t， rt_uint32/int32_t这样的数据类型，\nBSP可以在ARCH_CPU级别定义这些基本数据类型。\n\n请在rtconfig_project.h文件中重新定义这些数据类型。",
    "Enable RT-Thread Nano": "启用RT-Thread Nano",
    "RT-Thread Nano is a very small size and refined hard real-time kernel,\nwhich is suited for the extremely resource-constrained MCU system.": "RT-Thread Nano是一个非常小的、精致的硬实时内核，\n这适用于资源极其有限的单片机系统。",
    "Enable RT-Thread Smart (microkernel on kernel/userland)": "启用RT-Thread Smart（kernel/userland上的微内核）",
    "RT-Thread Smart is a microkernel based operating system on RT-Thread.": "RT-Thread Smart是一个基于RT-Thread的微内核操作系统。",
    "Enable AMP (Asymmetric Multi-Processing)": "启用AMP（非对称多处理）",
    "Enable SMP (Symmetric multiprocessing)": "启用SMP（对称多处理）",
    "This option should be selected by machines which have an SMP-\ncapable CPU.\nThe only effect of this option is to make the SMP-related\noptions available to the user for configuration.": "该选项应该由具有SMP-的机器选择\nCPU能力。\n该选项的唯一作用是使smp相关\n用户可用于配置的选项。",
    "Number of CPUs": "cpu数量",
    "Number of CPUs in the system": "系统中cpu的个数",
    "Alignment size for CPU architecture data access": "CPU架构数据访问的对齐大小",
    "The maximal level value of priority of thread": "线程优先级的最高级别值",
    "Tick frequency, Hz": "节拍频率，Hz",
    "System's tick frequency, Hz.": "系统的滴答频率，Hz。",
    "Using stack overflow checking": "使用堆栈溢出检查",
    "Enable thread stack overflow checking. The stack overflow is checking when\neach thread switch.": "启用线程堆栈溢出检查。堆栈溢出正在检查何时\n每个线程开关。",
    "Enable system hook": "启用系统钩子",
    "Enable the hook function when system running, such as idle thread hook,\nthread context switch etc.": "启用系统运行时的钩子功能，如空闲线程钩子；\n线程上下文切换等。",
    "Using function pointers as system hook": "使用函数指针作为系统钩子",
    "Enable hook list": "启用钩子列表",
    "Enable the hook list feature for rt-thread packages. With this, they can\nplug in to the system on run-time.": "为rt线程包启用钩子列表特性。有了这个，他们可以\n在运行时插入系统。",
    "Enable IDLE Task hook": "启用空闲任务挂钩",
    "The max size of idle hook list": "空闲钩子列表的最大大小",
    "The system has a hook list. This is the hook list size.": "系统有一个钩子列表。这是钩子列表的大小。",
    "The stack size of idle thread": "空闲线程的堆栈大小",
    "Enable software timer with a timer thread": "启用带有定时器线程的软件定时器",
    "the timeout function context of soft-timer is under a high priority timer\nthread.": "软定时器的超时函数上下文处于高优先级定时器下\n线程。",
    "Enable cpu usage tracing": "启用cpu使用跟踪",
    "Enable cpu usage tracer for application like top.": "为像top这样的应用程序启用cpu使用跟踪器。",
    "kservice options": "kservice选项",
    "Enable kservice to use tiny finding first bit set method": "启用kservice使用tiny查找第一个位集方法",
    "Enable debugging features": "开启调试功能",
    "Enable assertion debugging": "启用断言调试",
    "Enable color debugging log": "开启彩色调试日志",
    "Enable debugging of environment and context check": "打开环境和上下文检查的调试开关",
    "Enable debugging of components automatic initialization": "打开组件自动初始化调试开关",
    "Enable CI Action build mode": "启用CI Action构建模式",
    "Identify that the environment is CI Action.": "确定环境是CI Action。",
    "Inter-Thread communication": "线程间通信",
    "Enable semaphore": "启用信号量",
    "Enable mutex": "启用互斥量",
    "Enable event flag": "启用事件集",
    "Enable mailbox": "启用邮箱",
    "Enable message queue": "启用消息队列",
    "Enable message queue priority": "启用消息队列优先级",
    "Enable signals": "启用信号",
    "A signal is an asynchronous notification sent to a specific thread\nin order to notify it of an event that occurred.": "信号是发送到特定线程的异步通知\n以便通知它发生的事件。",
    "Memory Management": "内存管理",
    "Using memory pool": "使用内存池",
    "Using static memory fixed partition": "使用静态内存固定分区",
    "Using Small Memory Algorithm": "使用小内存算法",
    "Using SLAB Memory Algorithm": "使用SLAB内存算法",
    "The slab allocator of RT-Thread is a memory allocation algorithm\n optimizedfor embedded systems based on the slab allocator\n implemented by Matthew Dillon, founder of dragonfly BSD.\n The original slab algorithm is an efficient kernel memory\n allocation algorithm introduced by Jeff bonwick for\n Solaris Operating System.": "",
    "Using memheap Memory Algorithm": "使用memheap内存算法",
    "System Heap Memory Management": "系统堆内存管理",
    "Enable memory trace": "启用内存跟踪",
    "When enable RT_USING_MEMTRACE with shell, developer can call cmd:\n1. memtrace\n    to dump memory block information.\n2. memcheck\n    to check memory block to avoid memory overwritten.\n\nAnd developer also can call memcheck() in each of scheduling\nto check memory block to find which thread has wrongly modified\nmemory.": "",
    "Using heap in ISR": "在ISR中使用堆",
    "When this option is enabled, the critical zone will be protected with disable interrupt.": "当启用此选项时，关键区域将受到禁用中断的保护。",
    "Using device object": "使用设备对象",
    "Using ops for each device object": "为每个设备对象使用ops",
    "Enable additional interrupt trace information": "启用额外的中断跟踪信息",
    "Add name and counter information for interrupt trace.": "为中断跟踪添加名称和计数器信息。",
    "Enable thread safe kernel print service": "启用线程安全的内核打印服务",
    "Using console for rt_kprintf": "为rt_kprintf使用控制台",
    "the buffer size for console log printf": "控制台日志打印的缓冲区大小",
    "the device name for console": "控制台的设备名称",
    "Use atomic implemented in stdatomic.h": "使用在staticics.h中实现的原子",
    "Max number of backtrace level": "最大回溯级别数",
    "RT-Thread Components": "RT-Thread组件",
    "Set main thread stack size": "设置主线程堆栈大小",
    "Set main thread priority": "设置主线程优先级",
    "Support legacy version for compatibility": "支持旧版本以获得兼容性",
    "MSH: command shell": "MSH：命令shell",
    "The msh thread name": "msh线程名",
    "The priority level value of thread": "线程的优先级值",
    "The stack size for thread": "线程的堆栈大小",
    "Enable command history feature": "启用命令历史记录功能",
    "The command history line number": "命令历史行号",
    "Using symbol table for commands": "使用符号表的命令",
    "The command line size for shell": "shell的命令行大小",
    "Enable built-in commands, such as list_thread": "启用内置命令，如list_thread",
    "Keeping description in symbol table": "将描述保存在符号表中",
    "Disable the echo mode in default": "默认情况下关闭echo模式",
    "shell support authentication": "shell支持身份验证",
    "The number of arguments for a shell command": "shell命令的参数数量",
    "command option completion enable": "命令选项补全启用",
    "DFS: device virtual file system": "DFS：设备虚拟文件系统",
    "The device file system is a light weight virtual file system.": "设备文件系统是一个轻量级的虚拟文件系统。",
    "FAL: flash abstraction layer": "FAL: flash抽象层",
    "Device Drivers": "设备驱动程序",
    "Enable device driver model with device tree": "使用设备树启用设备驱动程序模型",
    "Enable device driver model with device tree (FDT). It will use more memory\nto parse and support device tree feature.": "使用设备树（FDT）启用设备驱动程序模型。它将使用更多的内存\n解析和支持设备树特性。",
    "Using Device Bus device drivers": "使用设备总线设备驱动程序",
    "Using device drivers IPC": "使用设备驱动程序IPC",
    "The number of unamed pipe": "未命名管道的数量",
    "Using system default workqueue": "使用系统默认的工作队列",
    "USING Serial device drivers": "使用串行设备驱动程序",
    "Choice Serial version": "选择串口版本",
    "Enable serial DMA mode": "启用串行DMA模式",
    "Set RX buffer size": "设置RX缓冲区大小",
    "Using serial bypass": "使用串行旁路",
    "Using CAN device drivers": "使用CAN设备驱动程序",
    "Enable CPU time for high resolution clock counter": "使能高分辨率时钟计数器的CPU时间",
    "When enable this option, the BSP should provide a rt_clock_cputime_ops\nfor CPU time by:\nconst static struct rt_clock_cputime_ops _ops = '{'...'}';\nclock_cpu_setops(&_ops);\n\nThen user can use high resolution clock counter with:\n\nts1 = clock_cpu_gettime();\nts2 = clock_cpu_gettime();\n\n/* and get the ms of delta tick with API: */\nms_tick = clock_cpu_millisecond(t2 - t1);\nus_tick = clock_cpu_microsecond(t2 - t1);": "当启用这个选项时，BSP应该提供一个rt_clock_cputime_ops\n的CPU时间：\nrt_clock_cputime_ops _ops ='{'…'}'；\nclock_cpu_setops(&_ops)；\n\n然后用户可以使用高分辨率时钟计数器：\n\nTs1 = clock_cpu_gettime()；\nTs2 = clock_cpu_gettime()；\n\n/*，并获得ms的增量刻度API: */\nMs_tick = clock_cpu_millisecond(t2 - t1)；\nUs_tick = clock_cpu_microsecond(t2 - t1)；",
    "Using I2C device drivers": "使用I2C设备驱动程序",
    "Use I2C debug message": "使用I2C调试消息",
    "Use GPIO to simulate I2C": "使用GPIO模拟I2C",
    "Use simulate I2C debug message": "使用模拟I2C调试消息",
    "Use GPIO to soft simulate I2C": "使用GPIO软模拟I2C",
    "Using ethernet phy device drivers": "使用以太网物理设备驱动程序",
    "Using phy device and mii bus v2": "使用物理设备和mii总线v2",
    "Using ADC device drivers": "使用ADC设备驱动程序",
    "Using DAC device drivers": "使用DAC设备驱动程序",
    "Using NULL device drivers": "使用NULL设备驱动程序",
    "Using ZERO device drivers": "使用ZERO设备驱动程序",
    "Using RANDOM device drivers": "使用随机设备驱动程序",
    "Using PWM device drivers": "使用PWM器件驱动",
    "Using PULSE ENCODER device drivers": "使用脉冲编码器设备驱动程序",
    "Using INPUT CAPTURE device drivers": "使用INPUT CAPTURE设备驱动程序",
    "Using MTD Nor Flash device drivers": "使用MTD或Flash设备驱动程序",
    "Using MTD Nand Flash device drivers": "使用MTD Nand Flash设备驱动程序",
    "Using Power Management device drivers": "使用电源管理设备驱动程序",
    "Using RTC device drivers": "使用RTC设备驱动程序",
    "Using SD/MMC device drivers": "使用SD/MMC设备驱动程序",
    "Using SPI Bus/Device device drivers": "使用SPI总线/设备设备驱动程序",
    "Using Watch Dog device drivers": "使用Watch Dog设备驱动程序",
    "Using Audio device drivers": "使用音频设备驱动程序",
    "Using Sensor device drivers": "使用传感器设备驱动程序",
    "Using Touch device drivers": "使用Touch设备驱动程序",
    "Using LCD graphic drivers": "使用LCD图形驱动",
    "Using Hardware Crypto drivers": "使用硬件加密驱动程序",
    "Using Wi-Fi framework": "使用Wi-Fi框架",
    "Using Block device drivers": "使用块设备驱动程序",
    "Using VirtIO device drivers": "使用VirtIO设备驱动程序",
    "Using Generic GPIO device drivers": "使用通用GPIO设备驱动程序",
    "Ktime: kernel time": "Ktime：内核时间",
    "Using Hardware Timer device drivers": "使用硬件定时器设备驱动程序",
    "Using USB with CherryUSB": "使用USB与CherryUSB",
    "C/C++ and POSIX layer": "C/ c++和POSIX层",
    "ISO-ANSI C layer": "ISO-ANSI C层",
    "Timezone and Daylight Saving Time": "时区和夏令时",
    "Enable fully version timezone and daylight saving time with database": "启用完全版本的时区和夏令时与数据库",
    "Enable lightweight timezone and daylight saving time": "启用轻量级时区和夏令时",
    "Set the default local timezone (hour)": "设置默认的本地时区（小时）",
    "Set the default local timezone (minute)": "设置默认的本地时区（分钟）",
    "Set the default local timezone (second)": "设置默认的本地时区（秒）",
    "POSIX (Portable Operating System Interface) layer": "POSIX（可移植操作系统接口）层",
    "Enable POSIX file system and I/O": "启用POSIX文件系统和I/O",
    "Enable delay APIs, sleep()/usleep()/msleep() etc": "启用延迟api， sleep()/ ussleep ()/msleep（）等",
    "Enable clock/time APIs, clock_gettime()/clock_settime() etc": "启用时钟/时间api， clock_gettime()/clock_settime（）等",
    "Enable timer APIs, timer_create()/timer_gettime() etc": "启用定时器api， timer_create()/timer_gettime（）等",
    "Enable pthreads APIs": "启用pthreads api",
    "Enable dynamic module APIs, dlopen()/dlsym()/dlclose() etc": "启用动态模块api， dlopen()/dlsym()/dlclose（）等",
    "Interprocess Communication (IPC)": "进程间通信（IPC）",
    "Enable pipe and FIFO": "启用管道和FIFO",
    "Enable posix message queue <mqueue.h>": "启用posix消息队列<mqueue.h>",
    "Enable posix semaphore <semaphore.h>": "启用posix信号量<semaphore.h>",
    "*** Socket is in the 'Network' category ***": "***套接字在`网络`类别***",
    "Enable C++ features": "启用c++特性",
    "Network": "网络",
    "SAL: socket abstraction layer": "套接字抽象层",
    "Enable network interface device": "启用网络接口设备",
    "LwIP: light weight TCP/IP stack": "LwIP：轻量级TCP/IP栈",
    "Enable AT commands": "启用AT命令",
    "Memory protection": "内存保护",
    "Enable memory protection": "启用内存保护",
    "Enable hardware stack guard": "启用硬件堆栈保护",
    "Utilities": "工具",
    "Enable Ymodem": "Enable Ymodem",
    "Enable ulog": "Enable ulog",
    "Enable utest (RT-Thread test framework)": "启用utest （RT-Thread测试框架）",
    "Enable Var Export": "启用Var导出",
    "Enable resource id": "启用资源id",
    "Enable ADT(abstract data type)": "启用ADT（抽象数据类型）",
    "RT-Link": "RT-Link",
    "VBus: virtual software bus": "VBus：虚拟软件总线",
    "Using USB legacy version": "使用USB旧版本",
    "Using USB host": "使用USB主机",
    "Using USB device": "使用USB设备",
    "Using fdt legacy version": "使用fdt遗留版本",
    "RT-Thread online packages": "RT-Thread软件包",
    "IoT - internet of things": "IoT - 物联网",
    "LoRaWAN_Driver : Support for LoRaWAN Network(Semtech)": "LoRaWAN_Driver：支持LoRaWAN网络",
    "Paho MQTT: Eclipse Paho MQTT C/C++ client for Embedded platforms": "Paho MQTT：嵌入式平台的Eclipse Paho MQTT C/ c++客户端",
    "umqtt: A light weight, powerful, customizable, easy-to-use and embeddable mqtt client for RT-Thread": "umqtt：一个轻量级、强大、可定制、易于使用和可嵌入的mqtt客户端，用于RT-Thread",
    "WebClient: A HTTP/HTTPS Client for RT-Thread": "WebClient：一个用于RT-Thread的HTTP/HTTPS客户端",
    "WebNet: A lightweight, customizable, embeddable Web Server for RT-Thread": "WebNet：一个轻量级的、可定制的、可嵌入的用于RT-Thread的Web服务器",
    "mongoose: Embedded Web Server / Embedded Networking Library": "嵌入式Web服务器/嵌入式网络库",
    "MY MQTT: Eclipse Paho MQTT C/C++ client, A new efficient and stable way to realize for rt-thread.": "MQTT: Eclipse Paho MQTT C/ c++客户端，一种新的高效稳定的rt线程实现方式。",
    "kawaii-mqtt: a mqtt client based on the socket API, support QoS2, mbedtls.": "kawaii-mqtt：基于套接字API的mqtt客户端，支持QoS2， mbedtls。",
    "BC28 MQTT: connect to Aliyun with Quectel BC28 model": "BC28 MQTT：接入阿里云，采用Quectel BC28型号",
    "WebTerminal: Terminal runs in a Web browser": "WebTerminal：终端在Web浏览器中运行",
    "FreeModbus: Modbus master and slave stack": "FreeModbus: Modbus主从栈",
    "nanopb: Protocol Buffers for Embedded Systems": "纳米b：嵌入式系统协议缓冲器",
    "Wifi-Host-Driver(WHD) for RT-Thread": "用于RT-Thread的wifi主机驱动程序（WHD）",
    "Wi-Fi": "Wi-Fi",
    "Marvell WiFi": "迈威尔公司无线网络",
    "Marvell WiFi driver for rt-thread": "为rt线程的Marvell WiFi驱动程序",
    "Wiced WiFi": "那无线",
    "Wiced WiFi driver for rt-thread": "为rt-thread添加WiFi驱动程序",
    "if \"PKG_USING_WLAN_WICED\" is opened, \"RT_USING_LWIP\" will be default selected.": "如果打开“PKG_USING_WLAN_WICED”，则默认选择“RT_USING_LWIP”。",
    "rw007: SPI WIFI rw007 driver": "rw007: SPI WIFI rw007驱动",
    "if \"PKG_USING_RW007\" is opened, \"RT_USING_LWIP\" will be default selected.": "如果打开“PKG_USING_RW007”，则默认选择“RT_USING_LWIP”。",
    "CYW43012 WiFi": "CYW43012 WiFi",
    "CYW43012 WiFi driver for rt-thread": "CYW43012 WiFi驱动的rt线程",
    "if \"PKG_USING_WLAN_CYW43012\" is opened, \"RT_USING_LWIP\" will be default selected.": "如果打开“PKG_USING_WLAN_CYW43012”，则默认选择“RT_USING_LWIP”。",
    "BL808 WiFi": "BL808 WiFi",
    "BL808 WiFi driver for rt-thread": "用于rt线程的BL808 WiFi驱动程序",
    "if \"PKG_USING_WLAN_BL808\" is opened, \"RT_USING_LWIP\" will be default selected.": "如果打开“PKG_USING_WLAN_BL808”，则默认选择“RT_USING_LWIP”。",
    "CYW43439 WiFi": "CYW43439 WiFi",
    "CYW43439 WiFi driver for rt-thread": "CYW43439 WiFi驱动的rt线程",
    "if \"PKG_USING_WLAN_CYW43439\" is opened, \"RT_USING_LWIP\" will be default selected.": "如果打开“PKG_USING_WLAN_CYW43439”，则默认选择“RT_USING_LWIP”。",
    "CoAP: A C implementation of the Constrained Application Protocol": "CoAP：约束应用协议的C实现",
    "libcoap: A C implementation of the Constrained Application Protocol (RFC 7252)": "libcoap：约束应用协议的C实现（RFC 7252）",
    "nopoll: A OpenSource WebSocket implementation (RFC 6455) in ansi C": "nopoll：一个开源的WebSocket实现（RFC 6455）在ansi C",
    "nopoll package in ansi C for websocket": "nopoll包在ansi C中用于websocket",
    "netutils: Networking utilities for RT-Thread": "nettils：用于RT-Thread的网络实用程序",
    "cmux: connection multiplexing protocol for RT-Thread, support GSM0710 .etc": "cmux：用于RT-Thread的连接多路复用协议，支持GSM0710等",
    "PPP DEVICE: lwIP PPP porting for Cellular Module( 2G/3G/4G )": "PPP设备：用于蜂窝模块（2G/3G/4G）的lwIP PPP端口",
    "AT DEVICE: RT-Thread AT component porting or samples for different device": "AT设备：RT-Thread AT组件移植或不同设备的样品",
    "AT Server Socket: AT server with socket commands.": "AT服务器套接字：带有套接字命令的AT服务器。",
    "WIZnet: WIZnet TCP/IP chips SAL framework implement": "WIZnet: WIZnet TCP/IP芯片SAL框架实现",
    "Application of AT Command on ZigBee Coordinator.": "AT指令在ZigBee协调器上的应用。",
    "IoT Cloud": "IoT Cloud",
    "OneNET: China Mobile OneNet cloud SDK for RT-Thread": "OneNET：中国移动OneNET云RT-ThreadSDK",
    "GAgent: GAgent of Gizwits in RT-Thread": "GAgent: RT-Thread中Gizwits的GAgent",
    "Ali-iotkit: Aliyun cloud sdk 'iotkit-embedded' for RT-Thread": "Ali-iotkit：阿里云“嵌入式iot”RT-Thread sdk",
    "Azure IoT SDK: Microsoft azure cloud SDK for RT-Thread": "Azure IoT SDK：微软Azure云RT-Thread SDK",
    "tencent-iot-sdk:  Tencent Cloud IoT Explorer Platform SDK for RT-Thread": "Tencent - IoT - SDK：腾讯云物联网浏览器平台RT-ThreadSDK",
    "jiot-c-sdk: JIGUANG IoT Cloud Client SDK for RT_Thread": "jiot-c-sdk：吉光物联网云客户端RT_Thread SDK",
    "ucloud_iot_sdk: Ucloud iot sdk for uiot-core platform.": "ucloud_iot_sdk: uiot-core平台的Ucloud iot sdk。",
    "Joylink Cloud SDK for IoT platform": "物联网平台Joylink云SDK",
    "IoTSharp-C-SDK: IoTSharp Client SDK for RT_Thread": "IoTSharp- c -SDK: RT_Thread的IoTSharp客户端SDK",
    "NimBLE:An open-source Bluetooth 5.0 stack porting on RT-Thread": "敏捷：一个开源的蓝牙5.0堆栈移植在RT-Thread上",
    "The llsync ble sdk adapter.": "llsync ble sdk适配器。",
    "ota_downloader: The firmware downloader which using on RT-Thread OTA component": "ota_downloader：在RT-Thread OTA组件上使用的固件下载程序",
    "ipmsg: A LAN instant messaging implement in RT-Thread": "在RT-Thread中实现的局域网即时消息",
    "Lssdp: SSDP protocol implemented on rt-thread": "Lssdp：在rt线程上实现的SSDP协议",
    "airkissOpen: Tencent Airkiss Protocol parse library": "airkissOpen：腾讯Airkiss协议解析库",
    "librws: Tiny, cross platform websocket client C library": "libws：微型的跨平台websocket客户端C库",
    "No additional dependecies\nSingle header library interface librws.h with public methods\nThread safe\nSend/receive logic in background thread": "没有额外的依赖项\n带有公共方法的单头库接口libraries .h\n线程安全的\n在后台线程发送/接收逻辑",
    "TCP Server:A TCP server that supports multiple clients": "TCP Server：支持多客户端的TCP服务器",
    "protobuf-c: a C implementation of the Google Protocol Buffers data serialization format on RT-Thread": "protobuf-c：谷歌协议在RT-Thread上的数据序列化格式的C实现",
    "dlt645: dlt645 master package": "Dlt645: Dlt645主包",
    "qxwz_application: high precision location library for RT-Thread.": "qxwz_application：用于RT-Thread的高精度定位库。",
    "smtp_client:smtp client package for rt-thread": "Smtp_client: rt-thread的smtp客户端包",
    "abup_fota: The firmware downloader which using on Abup FOTA component": "abup_fota：在Abup FOTA组件上使用的固件下载程序",
    "libcurl2rtt: The curl library ported on the RT-Thread platform": "libcurl2rtt：在RT-Thread平台上移植的curl库",
    "capnp: Cap'n Proto serialization/RPC system which is faster than protobuf.": "capnp：比protobuf更快的Cap'n protoserialization /RPC系统。",
    "agile_telnet: TCP debug for Ethernet": "agile_telnet：以太网的TCP调试",
    "nmealib: A NMEA Library for RT-Thread.": "nmealib：一个用于RT-Thread的NMEA库。",
    "pudlib:A TEXT parsing library for short messages in PDU format.": "pudlib：用于PDU格式短消息的文本解析库。",
    "BTSTACK: embedded btstack": "BTSTACK：嵌入式BTSTACK",
    "CYW43012 BT driver for rt-thread": "CYW43012 BT驱动的rt线程",
    "CYW43xx WiFi/BT SoC driver": "CYW43xx WiFi/BT SoC驱动",
    "lorawan_ed_stack: LoRaWAN End-Device Stack.": "lorawan_ed_stack: LoRaWAN端设备堆栈。",
    "wayz iot location": "Wayz物联网定位",
    "MAVLink: A very lightweight messaging protocol for communicating.": "MAVLink：用于通信的轻量级消息传递协议。",
    "BSAL: The Bluetooth Stack Abstract Layer": "蓝牙堆栈抽象层",
    "agile_modbus: Lightweight modbus protocol stack.": "agile_modbus：轻量级modbus协议栈。",
    "agile_ftp: Lightweight ftp server.": "agile_ftp：轻量级ftp服务器。",
    "EmbeddedProto: a C++ Protocol Buffers implementation specifically suitable for ARM Cortex-M MCUs.": "EmbeddedProto：一个c++协议缓冲器实现，特别适用于ARM Cortex-M mcu。",
    "RT-Link_hw": "RT-Link_hw",
    "RyanMqtt: 支持 MQTT3.1.1 协议所有特性的mqtt客户端": "RyanMqtt: 支持 MQTT3.1.1 协议所有特性的mqtt客户端",
    "RyanW5500": "RyanW5500",
    "lora_pkt_fwd:lora(wan) packet forward based on Semtech GWMP protocol(UDP)": "lora_pkt_fwd：基于Semtech UDP协议的lora（wan）报文转发",
    "lora_pkt_sniffer is a sniffer tool of lora(wan) packets.": "Lora_pkt_sniffer是一个lora（wan）数据包的嗅探工具。",
    "HM: A generic Bluetooth HCI transport layer": "HM：一个通用的蓝牙HCI传输层",
    "small modbus": "小的网络通讯协议",
    "net_server:TCP/TLS server,support wolfssl": "net_server:TCP/TLS服务器，支持wolfssl",
    "ligth weight zFTP client": "轻量级zFTP客户端",
    "WOL: wake-on-lan package for rt-thread": "WOL: rt线程的本地唤醒包",
    "zephyr_polling: Bluetooth BLE Stack.": "zephyr_polling：蓝牙BLE栈。",
    "Matter protocol stack porting on RT-Thread based on guidance from Connectivity Standards Alliance (CSA) Working Group.": "基于连接标准联盟（CSA）工作组指导的RT-Thread上的物质协议栈移植。",
    "Lightweight and high-performance C language modbus protocol stack.": "轻量级和高性能的C语言modbus协议栈。",
    "qmodbus is a quick and easy to use modbus communication protocol stack.": "Qmodbus是一个快速且易于使用的modbus通信协议栈。",
    "P-Net stack for Profinet device implementation": "P-Net栈用于Profinet设备的实现",
    "security packages": "安全包",
    "mbedtls: An portable and flexible SSL/TLS library": "mbedtls：一个可移植且灵活的SSL/TLS库",
    "libsodium: A modern and easy-to-use crypto library (NOT Recommended for MCU. Use libhydrogen instead).": "libsodium：一个现代且易于使用的加密库（不推荐用于MCU）。使用libhydrogen代替)。",
    "libhydrogen: A lightweight, secure, easy-to-use crypto library suitable for constrained environments.": "libhydrogen：一个轻量级、安全、易于使用的加密库，适用于受约束的环境。",
    "TinyCrypt: A tiny and configurable crypt library": "TinyCrypt：一个小的和可配置的crypt库",
    "TFM: Trusted firmware for M class": "TFM: M类的可信固件",
    "yd_crypto: Encryption and decryption algorithm library for microcontroller.": "yd_crypto：微控制器加解密算法库。",
    "language packages": "语言包",
    "JSON: JavaScript Object Notation, a lightweight data-interchange format": "JSON: JavaScript对象表示法，一种轻量级数据交换格式",
    "cJSON: Ultralightweight JSON parser in ANSI C": "cJSON: ANSI C中的超轻量级JSON解析器",
    "ljson: JSON parser in ANSI C": "ljson: ANSI C中的JSON解析器",
    "cJSON Tools: Provide JSON data parsing and perform corresponding actions": "cJSON工具：提供JSON数据解析并执行相应操作",
    "rapidjson: A fast JSON parser/generator for C++ with both SAX/DOM style API.": "rapidjson：一个快速的JSON解析器/生成器，支持SAX/DOM风格的API。",
    "jsmn: is a minimalistic JSON parser in C": "jsmn：是一个简约的C语言JSON解析器",
    "agile_jsmn: Lightweight JSON parser.": "agile_jsmn：轻量级JSON解析器。",
    "parson: parson is a lightweight json library written in C.": "parson: parson是一个用C语言编写的轻量级json库。",
    "RyanJson: 一个针对资源受限的嵌入式设备优化的c语言Json库,内存占用极小的通用Json库,简洁高效!": "RyanJson: 一个针对资源受限的嵌入式设备优化的c语言Json库,内存占用极小的通用Json库,简洁高效!",
    "XML: Extensible Markup Language": "XML：可扩展标记语言",
    "simple_xml : Based on the XML parser of the C language.": "simple_xml：基于C语言的XML解析器。",
    "ezXML is a C library for parsing XML documents.": "ezXML是一个解析XML文档的C库。",
    "LUATOS : Powerful embedded Lua Engine for IoT devices": "LUATOS：用于物联网设备的强大嵌入式Lua引擎",
    "Lua: A lightweight, embeddable scripting language.": "Lua：一种轻量级的、可嵌入的脚本语言。",
    "JerryScript: Ultra-lightweight JavaScript engine for the Internet of Things.": "JerryScript：物联网的超轻量级JavaScript引擎。",
    "MicroPython: A lean and efficient Python implementation for microcontrollers and constrained systems.": "MicroPython：用于微控制器和约束系统的精简高效的Python实现。",
    "PikaScript : ultra-lightweight python engine": "PikaScript：超轻量级python引擎",
    "Rust support for rt-thread.": "Rust对rt线程的支持。",
    "multimedia packages": "多媒体包",
    "LVGL: powerful and easy-to-use embedded GUI library": "功能强大且易于使用的嵌入式GUI库",
    "LVGL (official): Light and Versatile Graphics Library": "LVGL（官方）：光和多功能图形库",
    "Enable LVGL music player demo for RT-Thread": "为RT-Thread启用LVGL音乐播放器演示",
    "Enable LVGL GUI Guider demo for RT-Thread": "为RT-Thread启用LVGL GUI向导演示",
    "u8g2: a monochrome graphic library": "U8g2：单色图库",
    "u8g2 (official): a monochrome graphic library": "U8g2（官方）：单色图形库",
    "u8g2 (legacy): a monochrome graphic library": "U8g2 (legacy)：单色图形库",
    "Openmv: Open-Source Machine Vision": "Openmv：开源机器视觉",
    "mupdf: a lightweight PDF, XPS, and E-book viewer": "mupdf：一个轻量级的PDF、XPS和电子书查看器",
    "STemWin: a STemWin package for rt-thread": "STemWin：一个用于rt-thread的STemWin包",
    "WavPlayer: Minimal music player for wav file play and record": "最小的音乐播放器的wav文件播放和记录",
    "TJpgDec: Tiny JPEG Decompressor.": "TJpgDec：微型JPEG解压缩器。",
    "PDFGen: Simple C PDF Writer/Generation library": "PDFGen：简单的C PDF编写/生成库",
    "The Helix MP3 Decoder.": "Helix MP3解码器。",
    "AzureGUIX": "AzureGUIX",
    "touchgfx: a touchgfx package for rt-thread.": "Touchgfx：一个用于rt-thread的Touchgfx包。",
    "NUemWin: a NUemWin package for rt-thread": "NUemWin：一个用于rt-thread的NUemWin包",
    "mp3player:a simple mp3 format music player": "mp3播放器：一个简单的mp3格式音乐播放器",
    "TinyJPEG: Light-weight JPEG encoder package.": "TinyJPEG：轻量级JPEG编码器包。",
    "uGUI:Open source graphics library ugui ported to rtthread.": "uGUI：开源图形库uGUI移植到rtthread。",
    "mcurses: micro ncurses library": "微护士库",
    "termbox: library for writing text-based user interfaces": "用于编写基于文本的用户界面的库",
    "vt100: iridescent drawing library on MSH": "在MSH上的彩虹绘图库",
    "qrcode: A simple library for generating QR codes in C": "qrcode：一个用C语言生成QR码的简单库",
    "Enable GUI Engine": "启用GUI引擎",
    "Persimmon UI: An Embedded GUI component with sliding and animated effects": "一个带有滑动和动画效果的嵌入式GUI组件",
    "An Embedded GUI component with sliding and animated effects running on RT-Thread": "一个嵌入式GUI组件，具有滑动和动画效果，运行在RT-Thread上",
    "Enable 3gpp amrnb codec library": "启用3gpp amrnb编解码器库",
    "tools packages": "工具软件包",
    "CmBacktrace: Advanced fault backtrace library for ARM Cortex-M series MCU.": "CmBacktrace: ARM Cortex-M系列MCU的高级故障回溯库。",
    "EasyFlash: Lightweight embedded flash memory library.": "EasyFlash：轻量级嵌入式闪存库。",
    "EasyLogger: A ultra-lightweight, high-performance C/C++ log library": "EasyLogger：一个超轻量级、高性能的C/ c++日志库",
    "SystemView: A Segger utility for analysis and trace the RTOS": "SystemView：用于分析和跟踪RTOS的Segger实用程序",
    "SEGGER_RTT:the RTT of segger jlink instead of uart of console": "SEGGER_RTT: segger_link的RTT，而不是控制台的RTT",
    "RTT_AUTO_CMD: Auto exe the cmd of rtthread": "RTT_AUTO_CMD：自动执行rtthread的cmd",
    "rdb: RT-Thread Debug Bridge for rt-thread": "rdb: RT-Thread调试桥",
    "ulog_easyflash: The ulog flash plugin by EasyFlash.": "ulog_easyflash: The ulog flash plugin by EasyFlash.",
    "logmgr: A log management system for rt-thread.": "logmgr：一个rt线程的日志管理系统。",
    "ADBD: Android Debug Bridge daemon implementation in RT-Thread": "ADBD: Android调试桥守护进程实现在RT-Thread",
    "COREMARK : a benchmark that measures the performance of MCUs and CPUs.": "COREMARK：衡量mcu和cpu性能的基准。",
    "DHRYSTONE: a benchmark that measures the performance of MCUs and CPUs.": "DHRYSTONE：衡量mcu和cpu性能的基准。",
    "MemoryPerf: Memory Performance Testing": "MemoryPerf：内存性能测试",
    "nr_micro_shell:Lightweight command line interaction tool.": "nr_micro_shell：轻量级命令行交互工具。",
    "Chinese_Font_Library: a Chinese font library for rt-thread": "Chinese_Font_Library: rt-thread的中文字体库",
    "lunar_calendar: A tool to convert a Gregorian calendar date into a lunar calendar.": "lunar_calendar：一个将公历日期转换为阴历的工具。",
    "bs8116a: Touch key of HOLTEK BS8116A-3.": "bs8116a: HOLTEK bs8116a -3的触摸按键。",
    "GPS RMC: Analysis of GPS RMC information": "GPS RMC: GPS RMC信息分析",
    "UrlEncode: a simple tool to Encode/Decode Url": "UrlEncode：一个简单的工具来编码/解码Url",
    "uMCN is a light-weight and powerful IPC library based on the publisher/subscriber model.": "uMCN是一个基于发布者/订阅者模型的轻量级且功能强大的IPC库。",
    "lwrb2rtt: Lightweight ring buffer manager.": "lwrb2rtt：轻量级环缓冲区管理器。",
    "CPUU: CPU usage statistics tool.": "CPUU: CPU使用率统计工具。",
    "GBK2UTF8: conversion between GBK and UTF8.": "GBK2UTF8: GBK和UTF8之间的转换。",
    "vconsole: A virtual console package.": "vconsole：虚拟控制台包。",
    "kdb : Kernel debug tools.": "kdb：内核调试工具。",
    "WebAssembly Micro Runtime (WAMR)": "WebAssembly微运行时（WAMR）",
    "Micro-XRCE-DDS-Client: The middleware component of micro-ros, which provides ros2 topic pub/sub ability": "Micro-XRCE-DDS-Client: micro-ros的中间件组件，它提供了ros2主题发布/订阅功能",
    "lwlog: single header logging library.": "Lwlog：单头日志库。",
    "anv_trace: trace the program flow.": "Anv_trace：跟踪程序流程。",
    "anv_memleak: check if there are memleaks": "Anv_memleak：检查是否存在内存泄漏",
    "anv_testsuit: minimalist C/C++ unit test framework.": "anv_testsuit：简约的C/ c++单元测试框架。",
    "anv_bench: quick-and-dirty benchmarking system for quick prototyping.": "Anv_bench：快速原型测试系统。",
    "DEVMEM: read/write memory/register tools": "DEVMEM：读/写内存/寄存器工具",
    "regex: A small regex implementation in C.": "regex：一个小的C正则表达式实现。",
    "mem_sandbox: memory sandbox for RT-Thread": "mem_sandbox: RT-Thread的内存沙箱",
    "solar_terms: judging the relationship of 24 solar terms and date.": "节气：判断24节气与日期的关系。",
    "gan_zhi: get tiangan and dizhi informations according to the date and time.": "Gan_zhi：根据日期和时间获取天检和地检信息。",
    "Device Tree package in RT-Thread": "RT-Thread中的设备树包",
    "CBOX: C language box.": "CBOX: C语言框。",
    "Snowflake algorithm is a distributed ID generation algorithm.": "雪花算法是一种分布式ID生成算法。",
    "hash match for MCU": "MCU哈希匹配",
    "armv7m_DWT": "armv7m_DWT",
    "Realize serial port waveform function with vfoa+": "用vfoa+实现串口波形功能",
    "RT_Trace:by using J-Link realizes event monitoring": "RT_Trace：通过J-Link实现事件监控",
    "zdebug: print log, set variable data, execute functions.": "Zdebug：打印日志，设置变量数据，执行函数。",
    "RISC-V Minimalist Stack Traceback Components.": "RISC-V极简堆栈回溯组件。",
    "system packages": "系统包",
    "enhanced kernel services": "增强的内核服务",
    "rt_memcpy_cm: Cortex-M kernel assembly accelerated version of rt_memcpy function": "rt_memcpy_cm: rt_memcpy函数的Cortex-M内核汇编加速版本",
    "rt_kprintf_threadsafe: thread-safe version of rt_kprintf": "Rt_kprintf_threadsafe: rt_kprintf的线程安全版本",
    "a unity pkgs support for all Libs.": "一个统一的pkgs支持所有lib。",
    "acceleration: Assembly language or algorithmic acceleration packages": "加速：汇编语言或算法加速包",
    "Qfplib-M0-full: a free, fast and compact ARM Cortex-M0 floating-point library": "Qfplib-M0-full：一个免费，快速和紧凑的ARM Cortex-M0浮点库",
    "Qfplib-M0-tiny: a free ARM Cortex-M0 floating-point library in 1 kbyte": "Qfplib-M0-tiny：一个1kbyte的免费ARM Cortex-M0浮点库",
    "Qfplib-M3: a free, fast and accurate ARM Cortex-M3 floating-point library": "Qfplib-M3：一个免费，快速，准确的ARM Cortex-M3浮点库",
    "CMSIS: ARM Cortex-M Microcontroller Software Interface Standard": "CMSIS: ARM Cortex-M单片机软件接口标准",
    "CMSIS-5 Development": "CMSIS-5发展",
    "CMSIS-Core: Standardized API for the Cortex-A/M processor": "CMSIS-Core：用于Cortex-A/M处理器的标准化API",
    "CMSIS-DSP: A comprehensive DSP library for Cortex-M processor-based devices": "CMSIS-DSP：一个全面的DSP库，用于基于Cortex-M处理器的设备",
    "CMSIS-NN: Efficient Neural Network Kernels for Arm Cortex-M CPUs": "CMSIS-NN: Arm Cortex-M cpu的高效神经网络内核",
    "CMSIS-RTOS1 wrapper for RT-Thread": "用于RT-Thread的CMSIS-RTOS1包装器",
    "CMSIS-RTOS2 wrapper for RT-Thread": "用于RT-Thread的CMSIS-RTOS2包装器",
    "Micrium: Micrium software products porting for RT-Thread": "Micrium：为RT-Thread移植的Micrium软件产品",
    "μC/OS-III RTOS Application Compatibility Layer for RT-Thread": "μC/OS-III RTOS RT-Thread应用兼容层",
    "μC/OS-II RTOS Application Compatibility Layer for RT-Thread": "μC/OS-II RTOS RT-Thread应用兼容层",
    "uC/CRC for RT-Thread": "uC/CRC用于RT-Thread",
    "uC/Clk for RT-Thread": "uC/Clk用于RT-Thread",
    "uC/Common for RT-Thread": "uC/通用RT-Thread",
    "uC/Modbus for RT-Thread": "uC/Modbus用于RT-Thread",
    "FreeRTOS Application Compatibility Layer for RT-Thread": "FreeRTOS RT-Thread应用程序兼容层",
    "LiteOS SDK.": "LiteOS SDK.",
    "tz: time zone database and code": "Tz：时区数据库和代码",
    "Cairo - Multi-platform 2D graphics library": "Cairo -多平台2D图形库",
    "pixman is a library that provides low-level pixel manipulation": "Pixman是一个提供低级像素操作的库",
    "partition: A simple partition for block device in rt-thread.": "分区：在rt线程中块设备的简单分区。",
    "perf_counter: A dedicated performance counter for Cortex-M systick": "perf_counter：用于Cortex-M系统棒的专用性能计数器",
    "filex file system for RT-Thread": "用于RT-Thread的filex文件系统",
    "levelx:Threadx's wear-leveling component for rtthread.": "levelx:Threadx为rtthread提供的磨损平衡组件。",
    "FlashDB: A lightweight database that supports key-value and time series data.": "FlashDB：一个轻量级数据库，支持键值和时间序列数据。",
    "SQLite: a self-contained, high-reliability, embedded, full-featured, public-domain, SQL database engine.": "SQLite：一个独立的、高可靠性的、嵌入式的、全功能的、公共领域的SQL数据库引擎。",
    "RT-Thread Insight: probe tool for RT-Thread": "RT-Thread洞察：RT-Thread探针工具",
    "yaffs: Yet Another Flash File System": "yaffs：又一个Flash文件系统",
    "Littlefs: A high-integrity embedded file system": "Littlefs：一个高完整性的嵌入式文件系统",
    "JFFS2: Journalling Flash File System V2.": "JFFS2：日志Flash文件系统V2。",
    "UFFS: Ultra-low-cost Flash File System.": "UFFS：超低成本闪存文件系统。",
    "lwext4: an excellent choice of ext2/3/4 filesystem for microcontrollers.": "Lwext4：用于微控制器的ext2/3/4文件系统的绝佳选择。",
    "thread_pool: A thread pool base on RT-Thread": "thread_pool：基于RT-Thread的线程池",
    "RT-Robot: RT-Thread robots development platform": "RT-Robot: RT-Thread机器人开发平台",
    "EV: Framework for efficient development of vehicles (including drones)": "EV：高效开发车辆（包括无人机）的框架",
    "syswatch : A component used to ensure the long-term normal running of the system": "syswatch：保证系统长期正常运行的组件",
    "sys_load_monitor: system load monitor": "Sys_load_monitor：系统负载监视器",
    "plccore: A PLC(programmable logic controller) runtime kernel.": "plccore：可编程逻辑控制器运行时内核。",
    "ramdisk: A RAM memory block device.": "ramdisk: RAM存储块设备。",
    "minIni: a portable and configurable library for reading and writing '.INI' files.": "minIni：一个可移植和可配置的库，用于读取和写入`。ini `文件。",
    "qboot : A component used to make bootloader quickly": "qboot：一个用来快速引导的组件",
    "Ppool: Pthread-based thread pool library": "线程池：基于线程的线程池库",
    "OpenAMP: openamp for RT-Thread": "OpenAMP: RT-Thread的OpenAMP",
    "rpmsg-lite: rpmsg-lite for RT-Thread": "rmsg -lite: RT-Thread的rmsg -lite",
    "lpm: Logical partition management. Manage storage device and partition.": "lpm：逻辑分区管理。管理存储设备和分区。",
    "TLSF: A dynamic memory allocation algorithm with predictable execution time and low fragmentation.": "TLSF：一种动态内存分配算法，具有可预测的执行时间和低碎片。",
    "event_recorder: A lightweight event record and replay tools for debug and test.": "event_recorder：用于调试和测试的轻量级事件记录和重播工具。",
    "Arm-2D Graphics Library": "Arm-2D图形库",
    "A common infrastructure for bootloader, system flash layout.": "一个用于引导加载程序的通用基础结构，系统flash布局。",
    "TinyUSB: an open source cross-platform USB stack for embedded system": "TinyUSB：一个面向嵌入式系统的开源跨平台USB堆栈",
    "CherryUSB: tiny and portable USB host/device stack for embedded system with USB IP": "CherryUSB：微型便携式USB主机/设备堆栈，用于嵌入式系统与USB IP",
    "a multi timer for rt-thread.": "用于rt线程的多计时器。",
    "Tiny Flash Database for MCU": "微型Flash数据库的单片机",
    "QP/C": "QP / C",
    "agile_upgrade: Middleware for fast building bootloader.": "agile_upgrade：用于快速构建引导加载程序的中间件。",
    "flash_blob: Tool for quickly generating flash driver files.": "flash_blob：快速生成flash驱动文件的工具。",
    "mlibc: Embedded libc, especially for RISC-V": "mlibc：嵌入式libc，特别针对RISC-V",
    "TaskMsgBus: For sending and receiving text/object messages between threads": "TaskMsgBus：用于在线程之间发送和接收文本/对象消息",
    "UartFramework: Serial communication framework software package based on RT thread.": "UartFramework：基于RT线程的串行通信框架软件包。",
    "SFDB: Simple file database": "SFDB：简单文件数据库",
    "rtp: Cross platform thread pool.": "rtp：跨平台线程池。",
    "reb: Event broker component based on publish subscribe": "reb：基于发布订阅的事件代理组件",
    "r-rhealstone: A cross platform real-time system benchmark testing framework": "r-rhealstone：跨平台实时系统基准测试框架",
    "heartbeat: A heartbeat package.": "heartbeat：心跳包。",
    "peripheral libraries and drivers": "外围库和驱动程序",
    "HAL & SDK Drivers": "HAL和SDK驱动程序",
    "STM32 HAL & SDK Drivers": "STM32 HAL和SDK驱动程序",
    "STM32 F4 HAL driver package": "STM32 F4 HAL驱动包",
    "STM32 F4 CMSIS driver package": "STM32 F4 CMSIS驱动包",
    "STM32 L4 HAL driver package": "STM32 L4 HAL驱动程序包",
    "STM32 L4 CMSIS driver package": "STM32 L4 CMSIS驱动包",
    "stm32wb55_sdk: a stm32wb55_sdk(only ble stack now) package for rt-thread.": "Stm32wb55_sdk：用于rt-thread的Stm32wb55_sdk（现在仅支持堆栈）包。",
    "this sdk fork from STM32Cube_FW_WB. You can add more routine support based on this.": "这个sdk来自STM32Cube_FW_WB。您可以在此基础上添加更多例程支持。",
    "stm32_sdio: STM32 SDIO controller drivers library": "stm32_sdio: STM32 SDIO控制器驱动程序库",
    "Infineon HAL Packages": "英飞凌HAL封装",
    "Infineon_cat1cm0p.": "Infineon_cat1cm0p。",
    "Infineon_cmsis.": "Infineon_cmsis。",
    "Infineon_core-lib.": "Infineon_core-lib。",
    "Infineon_mtb-hal-cat1.": "Infineon_mtb-hal-cat1。",
    "Infineon_mtb-pdl-cat1.": "Infineon_mtb-pdl-cat1。",
    "Infineon_retarget-io.": "Infineon_retarget-io.",
    "Infineon_capsense.": "Infineon_capsense。",
    "Infineon_csdidac.": "Infineon_csdidac.",
    "Infineon_serial-flash.": "Infineon_serial-flash。",
    "Infineon_usbdev.": "Infineon_usbdev.",
    "bluetrum sdk": "bluetrum sdk",
    "embARC_bsp(Synopsys ARC Processer Board Support Package Software) package": "embARC_bsp（Synopsys ARC处理器板支持包软件）包",
    "ESP-IDF: Espressif IoT Development Framework": "ESP-IDF: expressiot开发框架",
    "Kendryte SDK": "Kendryte SDK",
    "Kendryte K210 SDK": "Kendryte K210 SDK",
    "kendryte K210 SDK package for rt-thread (legacy)": "kendryte K210 SDK包用于rt-thread （legacy）",
    "nrf5x_sdk: the sdk of nordic": "Nrf5x_sdk: Nordic的SDK",
    "nrfx: Standalone drivers for peripherals present in Nordic Semiconductor's SoCs.": "nrfx：北欧半导体soc中存在的外设的独立驱动程序。",
    "Raspberry Pi Pico SDK": "树莓派Pico SDK",
    "sensors drivers": "传感器驱动程序",
    "LSM6DSM sensor driver package, support: accelerometer, gyroscope, step, temperature.": "LSM6DSM传感器驱动包，支持：加速度计，陀螺仪，步进，温度。",
    "LSM6DSL sensor driver package, support: accelerometer, gyroscope, step.": "LSM6DSL传感器驱动包，支持：加速度计，陀螺仪，步进。",
    "LPS22HB sensor driver package, support: barometric,temperature.": "LPS22HB传感器驱动包，支持：气压、温度。",
    "HTS221 sensor driver package, support: temperature, humidity.": "HTS221传感器驱动包，支持：温度、湿度。",
    "LSM303AGR sensor driver package, support: accelerometer, magnetometer.": "LSM303AGR传感器驱动包，支持：加速度计，磁力计。",
    "BME280 sensor driver package, support: barometric, humidity.": "BME280传感器驱动包，支持：气压、湿度。",
    "BME680: Digital 4-in-1 sensor with gas, humidity, pressure and temperature.": "BME680：数字4合1传感器与气体，湿度，压力和温度。",
    "BMA400 sensor driver package, support: accelerometer, step.": "BMA400传感器驱动包，支持：加速度计，步进。",
    "BMI160/BMX160: Digital 6-axis and Digital 9-axis sensor": "BMI160/BMX160：数字6轴和数字9轴传感器",
    "SPL0601: Digital pressure sensor": "数字压力传感器",
    "MS5805: Digital pressure sensor": "数字压力传感器",
    "DA270 sensor driver package, support: accelerometer.": "DA270传感器驱动包，支持：加速度计。",
    "df220 sensor driver package, support: force sensor.": "Df220传感器驱动包，支持：力传感器。",
    "hshcal001 sensor driver package, support: temperature, humidity.": "Hshcal001传感器驱动包，支持：温度、湿度。",
    "bh1750 sensor driver package, support: ambient light.": "Bh1750传感器驱动包，支持：环境光。",
    "mpu6xxx: Universal 6-axis sensor driver package,support: accelerometer, gyroscope.": "mpu6xxx：通用6轴传感器驱动包，支持：加速度计，陀螺仪。",
    "AHT10: digital humidity and temperature sensor driver": "AHT10：数字湿度和温度传感器驱动器",
    "ap3216c: a digital ambient light and a proximity sensor ap3216c driver library.": "Ap3216c：一个数字环境光和接近传感器Ap3216c驱动程序库。",
    "TSL4531: a digital ambient light and a proximity senseor tsl4531 driver library.": "TSL4531：一个数字环境光和接近传感器TSL4531驱动程序库。",
    "DS18B20 sensor driver package,support: temperature.": "DS18B20传感器驱动包，支持：温度。",
    "dht11: Digital temperature and humidity sensor(Single bus)": "dht11：数字温湿度传感器（单总线）",
    "DHTxx one-wire digital temperature and humidity sensor.": "DHTxx单线数字式温湿度传感器。",
    "gy271: Universal 3-axis sensor driver packages,support: magnetism.": "gy271：通用三轴传感器驱动包，支持：磁力。",
    "GP2Y10: dust sensor by Sharp for detect air quality.": "GP2Y10：夏普粉尘传感器，用于检测空气质量。",
    "SGP30: air sensor by Sensirion for detect TVOC and CO2.": "SGP30：盛思锐空气传感器，用于检测TVOC和CO2。",
    "hdc1000 sensor driver,support: temperature and humidity.": "Hdc1000传感器驱动，支持：温度和湿度。",
    "BMP180 sensor driver package, support: barometric, temperature.": "BMP180传感器驱动包，支持：气压，温度。",
    "bmp280:bmp280 iic sensor driver package,support:pressure,temperature": "Bmp280: Bmp280 ic传感器驱动包，支持：压力，温度",
    "SHTC1 sensor driver package, support: temperature, humidity.": "SHTC1传感器驱动包，支持：温度、湿度。",
    "bmi088: a bmi088 package for rt-thread.": "Bmi088：一个用于rt-thread的Bmi088包。",
    "hmc5883: a hmc5883 package for rt-thread.": "Hmc5883：一个用于rt-thread的Hmc5883包。",
    "max6675: a package of digital temperature sensor max6675.": "Max6675：一套数字温度传感器Max6675。",
    "TMP1075 digital temperature sensor for i2c interface.": "TMP1075数字温度传感器为i2c接口。",
    "HC-SR04 sensor driver package.": "HC-SR04传感器驱动包。",
    "CCS811: Digital Gas Sensor for Monitoring Indoor Air Quality.": "CCS811：用于监测室内空气质量的数字气体传感器。",
    "PMSxx: Plantower pms serial PM2.5 sensor driver.": "PMSxx: Plantower pms系列PM2.5传感器驱动程序。",
    "RT3020 sensor driver package, support: accelerometer.": "RT3020传感器驱动包，支持：加速度计。",
    "mlx90632: a mlx90632 package for rt-thread.": "Mlx90632：用于rt-thread的Mlx90632包。",
    "a mlx90393 package for rt-thread.": "用于rt-thread的mlx90393包。",
    "a mlx90392 package for rt-thread.": "用于rt-thread的mlx90392包。",
    "a mlx90394 package for rt-thread.": "用于rt-thread的mlx90394包。",
    "MLX90397: 3D magnetometer sensor": "MLX90397: 3D磁强计传感器",
    "MS5611: Digital pressure sensor": "数字压力传感器",
    "max31865: a package of digital temperature sensor.": "Max31865：一套数字温度传感器。",
    "VL53L0X Time of flight(TOF) sensor.": "VL53L0X飞行时间传感器。",
    "ina260: a ina260 package for rt-thread.": "Ina260：一个用于rt-thread的Ina260包。",
    "A current monitoring chip from TI, driven through the SENSOR frame.": "一个来自TI的电流监测芯片，通过传感器框架驱动。",
    "MAX30102: heart rate and oxygen saturation measure": "MAX30102：心率和氧饱和度测量",
    "ina226: a ina226 package for rt-thread.": "Ina226：一个用于rt-thread的Ina226包。",
    "LIS2DH12 sensor driver package, support: 3-axis accelerometer,tempature.": "LIS2DH12传感器驱动包，支持：3轴加速度计，温度计。",
    "hs300x: digital humidity and temperature sensor hs300x driver library": "Hs300x：数字温湿度传感器Hs300x驱动程序库",
    "ZMOD4410: Gas Sensor Module ZMOD4410 driver library": "ZMOD4410：气体传感器模块ZMOD4410驱动程序库",
    "ISL29035: Integrated Digital Light Sensor ISL29035 driver library": "ISL29035：集成数字光传感器ISL29035驱动库",
    "mmc3680kj:mmc3680kj iic sensor driver package,support:Magnetometer": "mmc3680kj:mmc3680kj传感器驱动包，支持：磁力计",
    "qmp6989: High accuracy and small size barometric pressure sensor,support: barometer, temperature.": "qmp6989：高精度，小尺寸气压传感器，支持：气压计，温度。",
    "Use hx71xx and weighing pressure sensor to measure weight": "使用hx71xx和称重压力传感器测量重量",
    "sht2x: digital humidity and temperature sensor sht2x driver library": "Sht2x：数字温湿度传感器Sht2x驱动程序库",
    "sht3x: digital humidity and temperature sensor sht3x driver library": "Sht3x：数字温湿度传感器Sht3x驱动库",
    "sht4x: digital humidity and temperature sensor sht4x driver library": "Sht4x：数字温湿度传感器Sht4x驱动程序库",
    "AD7746: a high resolution, capacitance-to-digital converter (CDC).": "AD7746：高分辨率，电容-数字转换器（CDC）。",
    "adt74xx: digital temperature sensor adt74xx driver": "Adt74xx：数字温度传感器Adt74xx驱动程序",
    "MAX17048: Bat monitor": "MAX17048：蝙蝠监视器",
    "AS7341: AS7341 visible light sensor, can measure 8 wavelengths of visible light.": "AS7341: AS7341可见光传感器，可测量8个波长的可见光。",
    "cw2015:fuel gauging system IC for Lithium-ion(Li+) Battery.": "cw2015：锂离子（Li+）电池燃料计量系统IC。",
    "icm20608: a 3-axis gyroscope and a 3-axis accelerometer driver library": "Icm20608：一个3轴陀螺仪和3轴加速度计驱动程序库",
    "PAJ7620: a gesture detection module": "PAJ7620：手势检测模块",
    "STHS34PF80 sensor driver package, support: presence,temperature,motion.": "STHS34PF80传感器驱动包，支持：存在、温度、运动。",
    "touch drivers": "联系司机",
    "GT9147 touch driver package.": "GT9147触摸驱动程序包。",
    "GT1151 touch driver package.": "GT1151触摸驱动包。",
    "GT917S touch driver package.": "GT917S触摸驱动程序包。",
    "GT911 touch driver package.": "GT911触摸驱动包。",
    "FT6206 touch driver package.": "FT6206触摸驱动包。",
    "FT5426 touch driver package.": "FT5426触摸驱动包。",
    "FT6236 touch driver package.": "FT6236触摸驱动包。",
    "xpt2046 touch driver package": "Xpt2046触摸驱动包",
    "CST816X touch driver package.": "CST816X触摸驱动包。",
    "cst812t touch ic for RT-Thread's TrackPad": "cst812t触摸ic为RT-Thread的触控板",
    "realtek_ameba: ameba sdk package for rt-thread": "Realtek_ameba：用于rt-thread的ameba SDK包",
    "button drive by C, support single and double click, long press, long press release": "按键由C键驱动，支持单、双击，长按，长按释放",
    "pcf8574: Remote 8-bit I/O expander for I2C-bus": "pcf8574: i2c总线的远程8位I/O扩展器",
    "sx12xx:Semtech LoRa RF chip driver library": "sx12xx:Semtech LoRa射频芯片驱动程序库",
    "SignalLed:a signal led package for rt-thread": "signal：一个用于rt线程的信号引导包",
    "LedBlink: easy led blink support lib": "LedBlink：容易的led闪烁支持lib",
    "littled: Little LED Daemon for LED driver": "Little: LED驱动的小LED守护进程",
    "lkdGui a monochrome graphic lirary.": "一个单色图形库。",
    "infrared : infrared is base on rt-thread pin,hwtimer and pwm.": "红外线：红外线是基于rt螺纹引脚，hwtimer和pwm。",
    "multi_infrared : multi_infrared is base on rt-thread pin": "Multi_infrared: Multi_infrared是基于rt-thread引脚",
    "agile_button: A agile button package.": "agile_button：敏捷按钮包。",
    "agile_led: A agile led package.": "agile_led：一个敏捷领导包。",
    "at24cxx: eeprom at24cxx driver library.": "At24cxx: eeprom At24cxx驱动程序库。",
    "MotionDriver2RTT: A package porting MotionDriver to RTT": "MotionDriver2RTT：一个将MotionDriver移植到RTT的包",
    "pca9685: I2C-bus controlled 16-channel PWM controller": "pca9685: i2c总线控制16通道PWM控制器",
    "TFT-LCD ILI9341 SPI screen driver software package": "TFT-LCD il9341 SPI屏幕驱动软件包",
    "i2c-tools: a collection of i2c tools including scan/read/write": "i2c工具：i2c工具的集合，包括扫描/读/写",
    "nRF24L01: Single-chip 2.4GHz wireless transceiver.": "nRF24L01：单片2.4GHz无线收发器。",
    "RPLIDAR: a low cost LIDAR sensor suitable for indoor robotic SLAM application.": "RPLIDAR：一种低成本的激光雷达传感器，适用于室内机器人SLAM应用。",
    "AS608 fingerprint module driver": "AS608指纹模块驱动程序",
    "rc522: rfid module driver": "Rc522: rfid模块驱动",
    "ws2812b: Ws2812b software driver package using SPI+DMA": "ws2812b: ws2812b软件驱动程序包使用SPI+DMA",
    "extern rtc drivers": "外部RTC驱动程序",
    "multi_rtimer : a real-time and low power software timer module.": "Multi_rtimer：实时、低功耗软件定时器模块。",
    "MAX7219: for the digital tube": "MAX7219：用于数码管",
    "beep: Control the buzzer to make beeps at different intervals.": "蜂鸣器：控制蜂鸣器以不同的间隔发出蜂鸣声。",
    "easyblink: Blink the LED easily and use a little RAM": "easyblink：轻松地闪烁LED并使用少量RAM",
    "pms_series: Digital universal particle concentration sensor driver library": "pms_series：数字通用粒子浓度传感器驱动库",
    "CAN_YMODEM: a device connect can & ymodem": "CAN_YMODEM：设备连接can & ymodem",
    "lora_radio_driver: lora chipset(SX126x\\SX127x..) driver.": "lora_radio_driver: lora芯片组（SX126x\\SX127x..）驱动程序。",
    "quick_led : A quick and easy-to-use led driver package.": "quick_led：一个快速和易于使用的led驱动包。",
    "agile_console: Simple debugging device Middleware.": "agile_console：简单调试设备中间件。",
    "ld3320 speech recognition chip": "Ld3320语音识别芯片",
    "wk2124: spi wk2124 driver library.": "Wk2124: spi Wk2124驱动库。",
    "ly68l6400:a device drive and frame for ly68l6400": "Ly68l6400: Ly68l6400的设备驱动器和框架",
    "DM9051:DAVICOM SPI to Ethernet Controller": "DM9051:DAVICOM SPI到以太网控制器",
    "ssd1306: OLEDs based on SSD1306, SH1106, SH1107 and SSD1309 driver": "ssd1306：基于ssd1306、SH1106、SH1107和SSD1309驱动的oled",
    "qkey : A quick and easy-to-use key driver package.": "qkey：一个快速和易于使用的密钥驱动程序包。",
    "rs485 driver package.": "Rs485驱动包。",
    "rs232 driver package.": "Rs232驱动包。",
    "nes: nes simulator c Library.": "nes: nes模拟器。",
    "VSensor : using virtual sensor device.": "VSensor：使用虚拟传感器设备。",
    "vdevice: A virtual IO peripheral for virtualized environment.": "vdevice：用于虚拟化环境的虚拟IO外设。",
    "SGM706 Independent watchdog.": "SGM706独立监督。",
    "RDA58xx single-chip broadcase FM transceiver driver.": "RDA58xx单片机广播调频收发机驱动。",
    "libnfc: Platform independent Near Field Communication (NFC) library.": "libfc：平台无关的近场通信（NFC）库。",
    "mfoc: Mifare Classic Offline Cracker.": "mfoc: Mifare经典离线破解。",
    "tmc51xx power driver for stepper motors.": "Tmc51xx步进电机电源驱动器。",
    "TCA9534: a 8-bit I/O expander for i2c-bus.": "TCA9534: i2c总线的8位I/O扩展器。",
    "kobuki: Kobuki Robot serial communication driver.": "kobuki: kobuki机器人串行通信驱动程序。",
    "rosserial: ROS 1 on microcontrollers.": "rosserial：微控制器上的ROS 1。",
    "micro_ros: ROS 2 on microcontrollers.": "micro_ros：微控制器上的ROS 2。",
    "mcp23008: Remote 8-bit I/O expander for I2C-bus": "mcp23008：远程8位i2c总线I/O扩展器",
    "Misaka-Network for AT24CXX EEPROM": "misaka网络用于AT24CXX EEPROM",
    "Misaka-Network for RGB LED Bling.": "用于RGB LED Bling的misaka网络。",
    "lora-gw-driver-lib is lora gateway chip(SX130x) driver binary libraries.": "lora-gw-driver-lib是lora网关芯片（SX130x）驱动程序二进制库。",
    "lora_modem_driver is a serial driver of lora\\lorawan modem.": "Lora_modem_driver是lora\\lorawan modem的串口驱动程序。",
    "soft_serial : a software serial driver package by using the hardware timer capture / comparison functionality.": "Soft_serial：一个使用硬件定时器捕获/比较功能的软件串行驱动程序包。",
    "mb85rs16: 16K(2K x 8)Bit SPI FRAM Driver": "mb85rs16: 16K(2K × 8)Bit SPI FRAM驱动程序",
    "RFM300: ISM Transceiver Module With +20dBm(100mW) Output Power.": "RFM300: ISM收发模块，输出功率为+20dBm（100mW）。",
    "IO Input Filter: I/O input software filter module": "IO Input Filter: IO输入软件滤波模块",
    "LRF-NV7 laser ranging module": "LRF-NV7激光测距模块",
    "aip650/tm1650 : A quick and easy-to-use digit led and key driver package": "aip650/tm1650：一个快速和易于使用的数字led和密钥驱动包",
    "fingerprint module driver.": "指纹模块驱动程序。",
    "Device driver of BT chip ECB02C": "BT芯片ECB02C的设备驱动",
    "Micro AT device driver interface component": "微AT设备驱动接口组件",
    "TFT-LCD ST7789 SPI Graphic driver.": "TFT-LCD ST7789 SPI图形驱动程序。",
    "vs1003 driver": "vs1003司机",
    "x9555: I/O expander with interrupt, weak pull-up & config registers": "x9555：具有中断，弱上拉和配置寄存器的I/O扩展器",
    "enable : using x9555 pkgs.\ndisable: donot using x9555 pkgs.": "启用：使用x9555 pkgs。\n禁用：不使用x9555 pkgs。",
    "System_Run_LED: System Run LED Control thread.": "System_Run_LED：系统运行LED控制线程。",
    "Device driver of BT chip MX-01": "BT芯片MX-01的设备驱动",
    "Use RgPower": "使用RgPower",
    "Device driver of BT chip MX-02": "BT芯片MX-02的设备驱动",
    "gc9a01: RT-Thread package for working with TFT LCD based on SPI.": "gc9a01：基于SPI的TFT LCD RT-Thread包。",
    "spi-tools: a collection of spi tools including init/deinit/config/trans": "spi-tools：包括init/deinit/config/trans在内的spi工具集合",
    "AI packages": "AI packages",
    "libann: a light-weight ANN library, capable of training, saving and loading models.": "libann：一个轻量级的人工神经网络库，能够训练、保存和加载模型。",
    "NNoM: A higher-level Neural Network framework on Microcontroller": "基于微控制器的高级神经网络框架",
    "onnx-backend: Open Neural Network Exchange backend on RT-Thread": "onnx-backend：在RT-Thread上打开神经网络交换后端",
    "onnx-parser: Open Neural Network Exchange model parser on RT-Thread": "onnx-parser：在RT-Thread上开放的神经网络交换模型解析器",
    "Tensorflow Lite Micro: a lightweight deep learning end-test inference framework for RT-Thread operating system.": "Tensorflow Lite Micro：一个轻量级的深度学习终端测试推理框架，用于RT-Thread操作系统。",
    "elapack: linear algebra library for embedded devices, compatible with matlab.": "Elapack：用于嵌入式设备的线性代数库，兼容matlab。",
    "ulapack: linear algebra library for embedded devices.": "用于嵌入式设备的线性代数库。",
    "quest: A simulator of quantum computers on MCU. (RTC required)": "一个基于单片机的量子计算机模拟器。需要(RTC)",
    "A C++ Constraint Programming Library": "一个c++约束编程库",
    "r-tinymaix: A tiny inference Neural Network library specifically.": "r-tinymaix：一个小型推理神经网络库。",
    "Signal Processing and Control Algorithm Packages": "信号处理和控制算法包",
    "Please add description of APID in English.": "请添加APID的英文描述。",
    "fire PID communication protocol debugging assistant.": "消防PID通信协议调试助手。",
    "A quick and easy-to-use PID algorithm component": "一个快速和易于使用的PID算法组件",
    "ukal: Kalman filter based on ulapack.": "ukal：基于ulapack的卡尔曼滤波。",
    "DigitalCtrl: Digital closed-loop control algorithm library": "DigitalCtrl：数字闭环控制算法库",
    "DigitalCtrl is a digital control algorithm library designed to\nsimplify the programming of digital closed-loop controllers\nbased on microcontrollers, DSPs, and processors, and to provide\nclosed-loop controller algorithms with optimized performance and\nspace optimization.": "DigitalCtrl是一个数字控制算法库\n简化数字闭环控制器的编程\n基于微控制器，dsp和处理器，并提供\n具有优化性能的闭环控制器算法\n空间优化。",
    "kissfft: a Fast Fourier Transform (FFT) library": "kissfft：一个快速傅里叶变换（FFT）库",
    "CMSIS-DSP: embedded compute library for Cortex-M and Cortex-A": "CMSIS-DSP: Cortex-M和Cortex-A的嵌入式计算库",
    "miscellaneous packages": "各种各样的包",
    "project laboratory": "工程实验室",
    "Industrial gataway: Integrate RS-485, RS-232, Ethernet": "工业网关：集成RS-485， RS-232，以太网",
    "samples: kernel and components samples": "示例：内核和组件示例",
    "a kernel_samples package for rt-thread": "rt-thread的kernel_samples包",
    "a filesystem_samples package for rt-thread": "rt-thread的filesystem_samples包",
    "a network_samples package for rt-thread": "rt-thread的network_samples包",
    "a peripheral_samples package for rt-thread": "用于rt-thread的peripheral_samples包",
    "entertainment: terminal games and other interesting software packages": "娱乐：终端游戏和其他有趣的软件包",
    "cmatrix: text flying in and out in a terminal like as seen in 'The Matrix' movie": "cmatrix：像《黑客帝国》（The Matrix）电影中那样，文本在终端中飞来飞去",
    "sl: steam locomotive runs across your terminal when you type 'sl' as you meant to type 'ls'": "Sl：当你输入“Sl”时，蒸汽机车穿过你的终点站，因为你想输入“ls”。",
    "cal: a terminal calendar": "卡尔：一个终端日历",
    "aclock: a terminal clock": "时钟：终端时钟",
    "threes: An indie puzzle video game run on RT-Thread console": "3：在RT-Thread主机上运行的独立益智电子游戏",
    "2048: An indie puzzle video game run on RT-Thread console": "2048：在RT-Thread主机上运行的独立益智电子游戏",
    "snake: a remake of the old nokia game": "Snake：旧诺基亚游戏的重制版",
    "Tetris: An indie puzzle video game run on RT-Thread console": "俄罗斯方块：在RT-Thread主机上运行的独立解谜电子游戏",
    "donut: a 3D spinning donut": "甜甜圈：3D旋转甜甜圈",
    "cowsay: greeting from console": "考赛：控制台的问候",
    "Morse code (摩尔斯电码)": "Morse code (摩尔斯电码)",
    "TinySquare: a lightweight square game engine running on Cortex-M.": "tinyssquare：运行在Cortex-M上的轻量级正方形游戏引擎。",
    "libcsv: a small, simple and fast CSV library written in pure ANSI C89 that can read and write CSV data.": "libcsv：一个用纯ANSI C89编写的小型、简单、快速的CSV库，可以读写CSV数据。",
    "optparse: a public domain, portable, reentrant, embeddable, getopt-like option parser.": "Optparse：一个公共领域的、可移植的、可重入的、可嵌入的、类似getopt的选项解析器。",
    "Fastlz: A portable real-time compression library": "Fastlz：一个便携的实时压缩库",
    "FastLZ is very fast and thus suitable for real-time compression\nand decompression.\nPerfect to gain more space with almost zero effort.": "FastLZ非常快，因此适合实时压缩\n和减压。\n完美的获得更多的空间几乎零努力。",
    "miniLZO: A mini subset of the LZO real-time data compression library": "miniLZO: LZO实时数据压缩库的一个小子集",
    "miniLZO is a mini subset of the LZO real-time data compression library.": "miniLZO是LZO实时数据压缩库的一个小子集。",
    "QuickLZ : Fast data compression library": "快速数据压缩库",
    "LZMA: A compression library with high compression ratio": "LZMA：具有高压缩比的压缩库",
    "LZMA is a compression library with high compression ratio": "LZMA是一个具有高压缩比的压缩库",
    "ralarm: Infinitely scalable alarm components": "ralarm：无限扩展报警组件",
    "MultiButton: A compact and easy to use event-driven button driver": "一个紧凑和易于使用的事件驱动按钮驱动程序",
    "FlexibleButton: Small and flexible button driver": "灵活的小按钮驱动程序",
    "CanFestival: A free software CANopen framework": "CanFestival：一个免费的软件CANopen框架",
    "CanFestival focuses on providing an ANSI-C platform independent\nCANOpen stack that can be built as master or slave nodes on\nPCs, Real-time IPCs, and Microcontrollers.": "CanFestival专注于提供独立于ANSI-C平台的服务\n可以在CANOpen堆栈上构建为主节点或从节点\npc，实时ipc和微控制器。",
    "zlib: general purpose data compression library": "Zlib：通用数据压缩库",
    "minizip: zip manipulation library": "miniizip：压缩操作库",
    "heatshrink: A data compression/decompression library for embedded/real-time systems": "用于嵌入式/实时系统的数据压缩/解压缩库",
    "dstr: a dynaminc string package for rt-thread": "为rt-thread提供的动态字符串包",
    "TinyFrame: Serial communication protocol.": "TinyFrame：串行通信协议。",
    "kendryte k210 demo package": "Kendryte k210演示包",
    "upacker: building and parsing data frames to be sent over a serial interface": "Upacker：构建和解析要通过串行接口发送的数据帧",
    "uparam: Manage system parameters with FLASH": "uparam：通过FLASH管理系统参数",
    "Hello: A example package": "你好：一个示例包",
    "vi: A screen-oriented text editor": "vi：面向屏幕的文本编辑器",
    "ki: A small text editor in less than 1K lines of code": "ki：一个不到1000行代码的小型文本编辑器",
    "armv7m_dwt: High precision timing and delay": "armv7m_dwt：高精度定时和延迟",
    "crclib : A library of functions with 8-bit ,16-bit ,32-bit crc check calculations.": "一个具有8位，16位，32位crc校验计算的函数库。",
    "lwgps: Lightweight GPS NMEA parser": "轻量级GPS NMEA解析器",
    "state_machine: A feature-rich, yet simple finite state machine (FSM) implementation in C": "state_machine：一个功能丰富，但简单的C语言有限状态机（FSM）实现",
    "a design pattern demo package.": "一个设计模式演示包。",
    "Controller: PI, PR and RC controller library": "控制器：PI， PR和RC控制器库",
    "controller is a digital control algorithm implementation of PI, PR and RC algorithms.": "控制器是一种实现PI、PR和RC算法的数字控制算法。",
    "SOGI-based phase-locked loop(PLL) and frequency-locked loop(FLL) library": "基于sogi的锁相环（PLL）和锁频环（FLL）库",
    "PHASE_LOCKED_LOOP package is an implementation of SOGI based PLL and FLL.": "PHASE_LOCKED_LOOP包是基于SOGI的PLL和FLL的实现。",
    "Multi-Function Button Detection for MCU": "单片机多功能按键检测",
    "Serial / USB serial CAN Adapter (slcan) on RT-Thread.": "RT-Thread上的串行/ USB串行CAN适配器（slcan）。",
    "SOEM(Simple Open EtherCAT Master Library).": "SOEM（简单开放EtherCAT主库）。",
    "A quick and easy-to-use parameter management component.": "一个快速和易于使用的参数管理组件。",
    "CorevMCU_CLI: CLI components of Core-V-MCU.": "CorevMCU_CLI: Core-V-MCU的CLI组件。",
    "get irq priority for Cortex®-M.": "获得Cortex®-M的irq优先权。",
    "Arduino libraries": "Arduino库",
    "RTduino: Arduino Ecological Compatibility Layer": "RTduino: Arduino生态兼容层",
    "Projects and Demos": "项目和演示",
    "Message Queue demo: communicate between Arduino sketches and RT-Thread typcial C threads": "消息队列演示：Arduino草图和RT-Thread典型C线程之间的通信",
    "RTduino sketch loader demo": "RTduino草图加载程序演示",
    "UltrasoundRadar: Arduino ultrasound radar project": "ultrasounradar: Arduino超声雷达项目",
    "RTduino SensorFusion Shield Driver Library": "RTduino传感器融合屏蔽驱动程序库",
    "9 in 1 Sensor Shield Driver Library": "9 in 1传感器屏蔽驱动器库",
    "Arduino Sensor Kit Driver Library": "Arduino传感器套件驱动程序库",
    "MATLAB/Simulink Support Package for RTduino Hardware": "RTduino硬件的MATLAB/Simulink支持包",
    "Sensors": "传感器",
    "Enable Arduino Sensor Libraries on RT-Thread Sensor Device Framework": "在RT-Thread传感器设备框架上启用Arduino传感器库",
    "Adafruit Unified Sensor Framework": "Adafruit统一传感器框架",
    "Adafruit-SensorLab: scientific sensor readings/fusions/manipulations drivers": "Adafruit-SensorLab：科学传感器读数/融合/操作驱动程序",
    "Adafruit ADXL375: 3-Axis ±2g/±4g/±8g/±16g Digital MEMS Accelerometer": "Adafruit ADXL375: 3-Axis ±2g/±4g/±8g/±16g Digital MEMS Accelerometer",
    "Adafruit VL53L0X: Time of Flight Distance Sensor": "Adafruit VL53L0X：飞行时间距离传感器",
    "Adafruit VL53L0X Time of Flight Distance Sensor.": "Adafruit VL53L0X飞行时间距离传感器。",
    "Adafruit VL6180X: Time of Flight Distance Sensor.": "Adafruit VL6180X：飞行时间距离传感器。",
    "Adafruit MAX31855: Thermocouple Amplifier": "Adafruit MAX31855：热电偶放大器",
    "MAX31865 thermocouple sensor driver library": "MAX31865热电偶传感器驱动程序库",
    "Adafruit MAX31856: Universal Thermocouple Amplifier": "Adafruit MAX31856：通用热电偶放大器",
    "Adafruit MAX6675: Thermocouple Amplifier.": "Adafruit MAX6675：热电偶放大器。",
    "Adafruit MLX90614: Temperature Sensor": "Adafruit MLX90614: Temperature Sensor",
    "Adafruit LSM9DS1 triple-axis accelerometer/magnetometer/gyroscope sensor": "Adafruit LSM9DS1三轴加速度计/磁力计/陀螺仪传感器",
    "Adafruit AHT10 & AHT20: Humidity and Temperature Sensor": "Adafruit AHT10和AHT20：温湿度传感器",
    "Adafruit LSM9DS0 triaxial accelerometer/magnetometer/gyroscope sensor driver": "Adafruit LSM9DS0三轴加速度计/磁力计/陀螺仪传感器驱动程序",
    "Adafruit BMP280: barometric pressure, altitude and temperature sensor": "Adafruit BMP280：气压，高度和温度传感器",
    "Adafruit ADT7410: Precision I2C Temperature sensor library": "Adafruit ADT7410：精密I2C温度传感器库",
    "Adafruit BMP085/BMP180: Barometric Pressure + Temp sensor library": "Adafruit BMP085/BMP180：气压+温度传感器库",
    "Adafruit BME680: humidity & pressure sensor": "Adafruit BME680：湿度和压力传感器",
    "Adafruit MCP9808 Precision I2C Temperature Sensor": "Adafruit MCP9808精密I2C温度传感器",
    "Adafruit MCP4728: 4-Channel 12-Bit I2C DAC": "Adafruit MCP4728: 4通道12位I2C DAC",
    "Adafruit INA219: DC current sensor": "Adafruit INA219：直流电流传感器",
    "Adafruit LTR390: UV Sensor": "Adafruit LTR390: UV Sensor",
    "Adafruit ADXL345: 3-Axis ±2g/±4g/±8g/±16g Digital Accelerometer": "Adafruit ADXL345: 3-Axis ±2g/±4g/±8g/±16g Digital Accelerometer",
    "Adafruit DHT: Arduino library for DHT11, DHT22 Temperature and Humidity Sensor": "Adafruit DHT: Arduino库，用于DHT11， DHT22温湿度传感器",
    "Adafruit MCP9600 I2C Thermocouple ADC sensor": "Adafruit MCP9600 I2C热电偶ADC传感器",
    "Adafruit LSM6DS 6-DoF Accelerometer and Gyroscope Sensor": "Adafruit LSM6DS六自由度加速度计和陀螺仪传感器",
    "Adafruit BNO055: Absolute Orientation Sensor": "Adafruit BNO055：绝对方向传感器",
    "Adafruit MAX1704X: MAX17048/MAX17049 battery monitor driver": "Adafruit MAX1704X: MAX17048/MAX17049电池监视器驱动程序",
    "Adafruit MMC56x3: MMC5603/MMC5613 Magnetometer Sensor": "Adafruit MMC56x3: MMC5603/MMC5613 Magnetometer Sensor",
    "Adafruit MLX90393: Magnetic Field Sensor": "Adafruit MLX90393：磁场传感器",
    "Adafruit MLX90395: Magnetic Field Sensor": "Adafruit MLX90395：磁场传感器",
    "Adafruit ICM20X: TDK Invensense ICM20649 and ICM20948 Motion Sensor": "Adafruit ICM20X: TDK Invensense ICM20649和ICM20948运动传感器",
    "Adafruit DPS310: Barometric Pressure Sensor": "Adafruit DPS310：气压传感器",
    "Adafruit HTS221: Humidity and Temperature Sensor": "HTS221：湿度和温度传感器",
    "Adafruit SHT4X: temperature & humidity sensor": "Adafruit SHT4X：温湿度传感器",
    "Adafruit SHT31: Temperature and Humidity Sensor": "Adafruit SHT31：温湿度传感器",
    "Adafruit ADXL343: digital accelerometer (+/-2/4/8/16g) that supports both SPI and I2C mode": "Adafruit ADXL343：数字加速度计（+/-2/4/8/16g），支持SPI和I2C模式",
    "Adafruit BME280: Humidity, Barometric Pressure and Temperature sensor": "Adafruit BME280：湿度，气压和温度传感器",
    "Adafruit AS726x: spectral sensor": "Adafruit AS726x: spectral sensor",
    "Adafruit AMG88xx: AMG88xx 8x8 Thermocouple Sensors": "AMG88xx: AMG88xx 8x8热电偶传感器",
    "Adafruit AM2320 : Temperature & Humidity Unified Sensor": "Adafruit AM2320：温湿度统一传感器",
    "Adafruit AM2315: Humidity & Temperature sensor": "Adafruit AM2315：温湿度传感器",
    "Adafruit LTR329-LTR303: Light Sensor": "Adafruit LTR329-LTR303: Light Sensor",
    "Adafruit BMP085: Barometric Pressure Temperature sensor": "Adafruit BMP085：气压温度传感器",
    "Adafruit BMP183: Barometric Pressure & Temperature sensor": "Adafruit BMP183：气压温度传感器",
    "Adafruit BMP183 (Unified): Barometric Pressure & Altitude Sensor.": "Adafruit BMP183（统一）：气压和高度传感器。",
    "Adafruit BMP3XX: Precision Barometric Pressure and Altimeter Sensors": "Adafruit BMP3XX：精密气压和高度计传感器",
    "Adafruit MS8607: Pressure Humidity Temperature PHT Sensor": "Adafruit MS8607：压力湿度温度PHT传感器",
    "Adafruit LIS3MDL: Triple-axis Magnetometer Sonsor": "Adafruit LIS3MDL: Triple-axis Magnetometer Sonsor",
    "Adafruit MLX90640: IR Thermal Camera": "Adafruit MLX90640: IR Thermal Camera",
    "Adafruit MMA8451: Accelerometer Sensor": "Adafruit MMA8451: Accelerometer Sensor",
    "Adafruit MSA301: Triple Axis Accelerometer": "Adafruit MSA301：三轴加速度计",
    "Adafruit MPL115A2: Barometric Pressure Sensor": "Adafruit MPL115A2：气压传感器",
    "Adafruit BNO08x: 9-DOF Orientation IMU Fusion": "Adafruit BNO08x: 9自由度定向IMU融合",
    "Adafruit-BNO08x-RVC: a simple library to use the UART-RVC mode of the BNO08x sensors": "Adafruit-BNO08x-RVC：一个使用BNO08x传感器的UART-RVC模式的简单库",
    "Adafruit LIS2MDL: Magnetometer Sensor": "Adafruit LIS2MDL: Magnetometer Sensor",
    "Adafruit LSM303DLH: Magnetometer Sensor": "Adafruit LSM303DLH: Magnetometer Sensor",
    "Adafruit LC709203F: Fuel Gauge and Battery Monitor Sensor": "Adafruit LC709203F：燃料计和电池监测传感器",
    "Adafruit CAP1188: 8-Key Capacitive Touch Sensor": "Adafruit CAP1188: 8键电容式触摸传感器",
    "Adafruit CCS811: Air Quality Sensor": "Adafruit CCS811：空气质量传感器",
    "Adafruit NAU7802: I2C 24-bit ADC sensor": "Adafruit NAU7802: I2C 24-bit ADC sensor",
    "Adafruit LIS331: 3-axis Accelerometers Sensor": "Adafruit LIS331: 3轴加速度计传感器",
    "Adafruit LPS2x: LPS22 & LPS25 Pressure Sensor Driver": "Adafruit LPS2x: LPS22和LPS25压力传感器驱动程序",
    "Adafruit LPS35HW/LPS33HW: Water Resistant Pressure Sensor": "Adafruit LPS35HW/LPS33HW：防水压力传感器",
    "Adafruit LSM303: Triple-axis Accelerometer and Magnetometer Sensor": "Adafruit LSM303：三轴加速度计和磁力计传感器",
    "Adafruit LIS3DH: Accelerometer Sensor": "Adafruit LIS3DH: Accelerometer Sensor",
    "Adafruit PCF8591: Basic 4 x ADC + DAC": "Adafruit PCF8591: Basic 4 x ADC + DAC",
    "Adafruit MPL3115A2: Pressure/Altitude/Temperature Sensor": "Adafruit MPL3115A2：压力/高度/温度传感器",
    "Adafruit MPR121: Capacitive Touch Sensor": "Adafruit MPR121：电容式触摸传感器",
    "Adafruit MPRLS: Pressure Sensor": "Adafruit MPRLS: Pressure Sensor",
    "Adafruit MPU6050: 6-DoF Accel and Gyro Sensor": "Adafruit MPU6050: 6自由度加速度和陀螺传感器",
    "Adafruit PCT2075: temperature sensor": "Adafruit PCT2075：温度传感器",
    "Adafruit PM25AQI: PM2.5 Air Quality sensor": "Adafruit PM25AQI: PM2.5空气质量传感器",
    "Adafruit EMC2101: Fan Controller and Temperature sensor": "Adafruit EMC2101：风扇控制器和温度传感器",
    "Adafruit FXOS8700 3-Axis accelerometer and magnetometer, and the FXAS21002 3-axis gyroscope sensor": "Adafruit FXOS8700三轴加速度计和磁强计，以及FXAS21002三轴陀螺仪传感器",
    "Adafruit SCD30: CO2, Temperature, and Humidity Sensor": "Adafruit SCD30：二氧化碳，温度和湿度传感器",
    "Adafruit-FXOS8700: Accelerometer and Magnetometer sensor": "adfruit - fxos8700：加速度计和磁力计传感器",
    "Adafruit HMC5883 (Unified): 3-Axis Magnetometer": "Adafruit HMC5883（统一）：三轴磁强计",
    "Adafruit SGP30: Air Quality Sensor": "Adafruit SGP30：空气质量传感器",
    "Adafruit-TMP006: IR Thermopile Library": "adfruit - tmp006: IR热电堆库",
    "Adafruit TLA202x: ADCs sensor": "Adafruit TLA202x: ADCs sensor",
    "Adafruit-TCS34725: RGB Color Sensor": "Adafruit-TCS34725: RGB颜色传感器",
    "Adafruit-Si7021: Temperature And Humidity Sensor": "adfruit - si7021：温湿度传感器",
    "Adafruit Si1145: UV/IR/Visible Light Sensor": "Adafruit Si1145：紫外/红外/可见光传感器",
    "Adafruit SGP40: Gas/Air Quality I2C Sensor": "Adafruit SGP40：气体/空气质量I2C传感器",
    "Adafruit-SHTC3: Temperature and Humidity Sensor": "shtc3：温湿度传感器",
    "Adafruit HDC1000: Temperature and Humidity Sensor": "Adafruit HDC1000：温湿度传感器",
    "Adafruit HTU21DF: Temperature and Humidity Sensor": "Adafruit HTU21DF：温湿度传感器",
    "Adafruit AS7341: 11-Channel Spectral Sensor.": "Adafruit AS7341: 11通道光谱传感器",
    "Adafruit HTU31D: Temperature and Humidity Sensor": "Adafruit HTU31D：温湿度传感器",
    "Adafruit INA260: Current Sensor": "Adafruit INA260：电流传感器",
    "Adafruit TMP007: Contact-less Infrared Thermopile Sensor": "Adafruit TMP007：非接触式红外热电堆传感器",
    "Adafruit L3GD20: Triple-Axis Gyro Sensor": "Adafruit L3GD20：三轴陀螺传感器",
    "Adafruit TMP117: High Precision Digital Temperature Sensor": "Adafruit TMP117：高精度数字温度传感器",
    "Adafruit TSC2007: Resistive Touch Screen Drivers.": "Adafruit TSC2007：电阻式触摸屏驱动。",
    "Adafruit TSL2561: Ambient Light Intensity Sensor.": "Adafruit TSL2561：环境光强度传感器。",
    "Adafruit TSL2591: Digital Luminosity (light) Sensors": "Adafruit TSL2591：数字亮度（光）传感器",
    "Adafruit Vcnl4040: Proximity and Ambient Light Sensor": "Adafruit Vcnl4040：接近和环境光传感器",
    "Adafruit Veml6070: Advanced Ultraviolet (UV) Light Sensor": "Adafruit Veml6070：先进的紫外线（UV）光传感器",
    "Adafruit Veml6075: Ultraviolet (UV) Light Sensor": "Adafruit Veml6075：紫外线光传感器",
    "Adafruit Veml7700: Ambient Light Sensor": "Adafruit Veml7700：环境光传感器",
    "Seeed LIS3DHTR: 3-Axis Digital Accelerometer": "LIS3DHTR: 3轴数字加速度计",
    "Seeed-DHT: DHT11, DHT22, DHT21 & AM2301 Temperature And Humidity Sensor": "dht: DHT11, DHT22， DHT21和AM2301温度和湿度传感器",
    "Seeed ADXL335: complete 3-axis accelerometer": "ADXL335：完整的3轴加速度计",
    "Seeed ADXL345: 3-Axis Digital Accelerometer": "ADXL345: 3轴数字加速度计",
    "Seeed BME280: Temp & Humi & Barometer Sensor": "参见BME280：温度、湿度和气压计传感器",
    "Seeed BMP280: an absolute barometric pressure sensor": "见BMP280：绝对气压传感器",
    "Seeed H3LIS331DL: 3-axis linear accelerometer": "见H3LIS331DL: 3轴线性加速度计",
    "Seeed MMA7660: 3-Axis Digital Accelerometer": "见MMA7660: 3轴数字加速度计",
    "Seeed TSL2561/ISL29035: Digital Light Sensor": "见TSL2561/ISL29035：数字光传感器",
    "Seeed PAJ7620: gesture recognition function sensor": "见PAJ7620：手势识别功能传感器",
    "Seeed VL53L0X: Time-of-Flight ranging and gesture detection sensor": "VL53L0X：飞行时间测距和手势检测传感器",
    "Seeed ITG3200 Sensor Driver": "参见ITG3200传感器驱动程序",
    "Seeed SHT31: Temperature Humidity Sensor": "参见SHT31：温湿度传感器",
    "Seeed HP20x: Barometric Pressure, Altimeter, and Temperature Sensor": "见HP20x：气压，高度计，和温度传感器",
    "Seeed DRV2605L: Haptic Motor Sensor": "见DRV2605L：触觉电机传感器",
    "Seeed BBM150: digital compass sensor": "见BBM150：数字罗盘传感器",
    "Seeed-HMC5883L: 3-Axis Digital Compass Sensor": "种子- hmc5883l：三轴数字罗盘传感器",
    "Seeed LSM303DLH: 3-axis accelerometer and magnetic sensor": "见LSM303DLH: 3轴加速度计和磁传感器",
    "Seeed TCS3414CS: I2C Color Sensor": "参见TCS3414CS: I2C颜色传感器",
    "Seeed MP503: Air Quality Sensor": "MP503：空气质量传感器",
    "Seeed BMP085/BMP180: Barometer Sensor": "参见BMP085/BMP180：气压计传感器",
    "Seeed HighTemp: K type thermocouple Temperature Sensor": "HighTemp: K型热电偶温度传感器",
    "Seeed VEML6070: advanced ultraviolet (UV) light sensor": "VEML6070：先进的紫外线（UV）光传感器",
    "Seeed Si1145: Sunlight Sensor": "参见Si1145：阳光传感器",
    "Seeed SHT35: temperature and humidity sensors": "参见SHT35：温湿度传感器",
    "Seeed AT42QT1070: a digital burst mode charge-transfer capacitive sensor driver": "参见AT42QT1070：一个数字突发模式电荷转移电容传感器驱动器",
    "Seeed LSM6DS3: 6-Axis Accelerometer&Gyroscope": "参见LSM6DS3: 6轴加速度计和陀螺仪",
    "Seeed HDC1000: Temperature and Humidity Sensor": "HDC1000：温湿度传感器",
    "Seeed HM3301: dust detection sensor": "见HM3301：粉尘检测传感器",
    "Seeed MCP9600: digital temperature sensor": "参见MCP9600：数字温度传感器",
    "Seeed LTC2941: coulomb counter sensor": "见LTC2941：库仑计数器传感器",
    "Seeed LDC1612: 2 channel, 28-bit inductance to digital converters (LDCs) for inductive sensor": "见LDC1612: 2通道，28位电感到数字转换器（ldc）的电感传感器",
    "Capacitive Sensor: detect touch or proximity": "电容式传感器：检测触摸或接近",
    "Jarzebski MPU6050 6-DoF Accel and Gyro Sensor Driver": "Jarzebski MPU6050 6-DoF加速度和陀螺传感器驱动程序",
    "Display": "显示",
    "Adafruit-GFX-Library: Adafruit GFX graphics core library": "Adafruit-GFX- library: Adafruit GFX图形核心库",
    "U8g2_Arduino: Arduino Monochrome Graphics Library": "U8g2_Arduino: Arduino单色图形库",
    "TFT_eSPI: TFT graphics library for Arduino processors with performance optimisation": "TFT_eSPI：用于Arduino处理器的TFT图形库，具有性能优化",
    "Adafruit ST7735 and ST7789 SPI displays driver": "Adafruit ST7735和ST7789 SPI显示驱动程序",
    "Adafruit SSD1306: SSD1306 monochrome 128x64 and 128x32 OLEDs driver": "Adafruit SSD1306: SSD1306单色128x64和128x32 oled驱动程序",
    "Adafruit ILI9341: ILI9341 display Arduino driver": "Adafruit ILI9341: ILI9341 display Arduino driver",
    "Seeed TM1637: 4 digit display": "见TM1637: 4位显示",
    "Timing": "时机",
    "RTClib real time clock library for Arduino": "RTClib实时时钟库Arduino",
    "MsTimer2: Run a function every millisecond": "MsTimer2：每毫秒运行一个函数",
    "Ticker: Creating Tickers which can call repeating functions. Replaces delay() with non-blocking functions.": "Ticker：创建可以调用重复函数的Ticker。用非阻塞函数替换delay（）。",
    "TaskScheduler: Cooperative multitasking for Arduino": "TaskScheduler: Arduino的协作多任务处理",
    "Data Processing": "数据处理",
    "Kalman Filter Library": "卡尔曼滤波器库",
    "ArduinoJson: A simple and efficient JSON library for embedded C++": "ArduinoJson：一个简单而高效的嵌入式c++ JSON库",
    "TensorFlow Lite Micro: TensorFlow Lite for Microcontrollers (TLFM) Library for RTduino": "TensorFlow Lite Micro: TensorFlow Lite for Microcontrollers (TLFM) Library for RTduino",
    "RunningMedian: determine the running median by means of a circular buffer": "RunningMedian：通过循环缓冲区确定运行中值",
    "Data Storage": "数据存储",
    "Communication": "沟通",
    "Adafruit PN532: NFC/RFID driver": "Adafruit PN532: NFC/RFID驱动程序",
    "Adafruit Si4714: FM+RDS/RBDS Transmitter driver": "Adafruit Si4714: FM+RDS/RBDS发射机驱动",
    "Device Control": "设备控制",
    "Adafruit PCF8574: GPIO Exapnder": "Adafruit PCF8574: GPIO Exapnder",
    "Adafruit PCA9685: 16-Channel 12-bit PWM/Servo Driver": "Adafruit PCA9685: 16通道12位PWM/伺服驱动器",
    "Adafruit TPA2016: Class D Amplifier Breakout": "Adafruit TPA2016: D类放大器断开",
    "Adafruit DRV2605: Haptic Motor Controller": "Adafruit DRV2605：触觉马达控制器",
    "Adafruit DS1841: Digital Potentiometer Breakout": "Adafruit DS1841：数字电位器开关",
    "Adafruit DS3502: Digital Potentiometer": "Adafruit DS3502：数字电位计",
    "Seeed PCF85063TP: High Precision RTC": "PCF85063TP：高精度RTC",
    "Other": "其他",
    "Adafruit MFRC630 RFID Front-End Breakout Board": "Adafruit MFRC630 RFID前端分线板",
    "Adafruit Si5351 Clock Generator Breakout": "Adafruit Si5351时钟发生器爆发",
    "Signal IO": "信号输入输出",
    "Adafruit BusIO: abstract away I2C & SPI transactions and registers": "Adafruit BusIO：抽象I2C和SPI事务和寄存器",
    "Adafruit TCA8418: GPIO expander and key matrix driver": "Adafruit TCA8418: GPIO扩展器和密钥矩阵驱动程序",
    "Adafruit MCP23008/17: I2C and SPI Port Expanders.": "Adafruit MCP23008/17: I2C和SPI端口扩展器。",
    "Adafruit ADS1015/1115: 12/16-bit Differential or Single-Ended ADCs with PGA and Comparator": "Adafruit ADS1015/1115: 12/16位差分或单端adc，带PGA和比较器",
    "Adafruit AW9523: GPIO Expander and LED driver": "Adafruit AW9523: GPIO扩展器和LED驱动",
    "Adafruit MCP3008: 8-Channel 10-Bit ADC With SPI Interface": "Adafruit MCP3008：带SPI接口的8通道10位ADC",
    "Adafruit MCP4725: 12-bit I2C DAC driver": "Adafruit MCP4725: 12位I2C DAC驱动程序",
    "Adafruit BD3491FS: Sound Processor driver": "Adafruit BD3491FS：声音处理器驱动程序",
    "Uncategorized": "未分类的",
    "aarch64-none-elf-gcc toolchain": "aarch64-none-elf-gcc工具链",
    "arm-none-eabi-gcc toolchain": "arm-none-eabi-gcc工具链",
    "riscv-none-elf-gcc toolchain": "riscv-none-elf-gcc工具链",
    "Hardware Drivers Config": "硬件驱动配置",
    "Onboard Peripheral Drivers": "板载外围驱动程序",
    "Enable USB TO USART (uart1)": "启用USB TO USART （uart1）",
    "Enable COM2 (uart2 pin conflict with Ethernet and PWM)": "使能COM2 （uart2引脚与以太网和PWM冲突）",
    "Enable COM3 (uart3)": "启用COM3 （uart3）",
    "Enable SRAM": "使静态存储器",
    "Enable ATK LCD": "使能ATK LCD",
    "Use LCD TOUCH (Default Res)": "使用LCD TOUCH（默认分辨率）",
    "Enable LVGL for LCD": "为LCD启用LVGL",
    "Enable SPI FLASH (W25Q128 spi1)": "启用SPI FLASH （W25Q128 spi1）",
    "Enable soft SPI FLASH (W25Q128 sspi2)": "启用软SPI FLASH （W25Q128 sspi2）",
    "Enable I2C EEPROM (i2c1)": "Enable I2C EEPROM (i2c1)",
    "Enable Ethernet": "启用以太网",
    "Enable MPU6050 (i2c1)": "使能MPU6050 （i2c1）",
    "Enable File System": "启用文件系统",
    "On-chip Peripheral Drivers": "片上外设驱动",
    "Enable GPIO": "Enable GPIO",
    "Enable UART": "使UART",
    "Enable UART1": "使UART1",
    "Enable UART1 RX DMA": "使能UART1 RX DMA",
    "Enable UART1 TX DMA": "使能UART1 TX DMA",
    "Enable UART2": "使UART2",
    "Enable UART3": "使UART3",
    "Enable UART4": "使UART4",
    "Enable UART5": "使UART5",
    "Enable UART6": "使UART6",
    "Enable timer": "启用定时器",
    "Enable PWM": "使脉宽调制",
    "Enable on-chip FLASH": "启用片上FLASH",
    "Enable soft SPI BUS": "使能软SPI总线",
    "Enable SPI BUS": "启用SPI总线",
    "Enable ADC": "使ADC",
    "Enable I2C1 BUS (software simulation)": "启用I2C1总线（软件仿真）",
    "Enable LCD Touch BUS (software simulation)": "使能LCD Touch BUS（软件仿真）",
    "i2c2 scl pin number, PB0": "i2c2 scl引脚编号，PB0",
    "I2C2 sda pin number, PF11": "I2C2 sda引脚编号，PF11",
    "Enable DAC": "使DAC",
    "Enable RTC": "使清债信托公司",
    "Enable Watchdog Timer": "开启看门狗定时器",
    "Enable SDIO": "Enable SDIO",
    "Enable USB Device": "启用USB设备",
    "Enable USB Host": "开启USB主机",
    "Enable Pulse Encoder": "启用脉冲编码器",
    "Enable RNG (Random Number Generator)": "启用RNG（随机数生成器）",
    "Enable UDID (Unique Device Identifier)": "启用UDID（唯一设备标识符）",
    "Board extended module Drivers": "单板扩展模块驱动",
    "Enable ESP8266(AT Command, COM3)": "启用ESP8266（AT命令，COM3）",
    "The slab allocator of RT-Thread is a memory allocation algorithm\noptimizedfor embedded systems based on the slab allocator\nimplemented by Matthew Dillon, founder of dragonfly BSD.\nThe original slab algorithm is an efficient kernel memory\nallocation algorithm introduced by Jeff bonwick for\nSolaris Operating System.": "RT-Thread的slab分配器是一种内存分配算法\n基于平板分配器的嵌入式系统优化\n由dragonfly BSD的创始人Matthew Dillon实现。\n原来的slab算法是一种高效的内核内存算法\n分配算法由Jeff bonwick为\nSolaris操作系统。",
    "When enable RT_USING_MEMTRACE with shell, developer can call cmd:\n1. memtrace\nto dump memory block information.\n2. memcheck\nto check memory block to avoid memory overwritten.\n\nAnd developer also can call memcheck() in each of scheduling\nto check memory block to find which thread has wrongly modified\nmemory.": "当在shell中启用RT_USING_MEMTRACE时，开发人员可以调用cmd：\n1. memtrace\n转储内存块信息。\n2. memcheck\n检查内存块以避免内存覆盖。\n\n开发人员还可以在每个调度中调用memcheck（）\n检查内存块以查找错误修改了哪个线程\n内存。"
}